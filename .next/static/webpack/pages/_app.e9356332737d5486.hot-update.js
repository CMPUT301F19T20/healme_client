"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/store/slices/garminSleepDateSlice.js":
/*!**************************************************!*\
  !*** ./src/store/slices/garminSleepDateSlice.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeDate\": function() { return /* binding */ changeDate; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\nvar initialState = {\n    date: \"2016-01-10\"\n};\nvar garminSleepDateSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'garminSleepDate',\n    initialState: initialState,\n    reducers: {\n        changeDate: function(state, action) {\n            console.log(action.payload);\n            state.date = action.payload;\n        }\n    }\n});\nvar changeDate = garminSleepDateSlice.actions.changeDate;\n/* harmony default export */ __webpack_exports__[\"default\"] = (garminSleepDateSlice.reducer);\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RvcmUvc2xpY2VzL2dhcm1pblNsZWVwRGF0ZVNsaWNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxHQUFLLENBQUNDLFlBQVksR0FBRyxDQUFDO0lBQ2xCQyxJQUFJLEVBQUUsQ0FBWTtBQUN0QixDQUFDO0FBQ0QsR0FBSyxDQUFDQyxvQkFBb0IsR0FBR0gsNkRBQVcsQ0FBQyxDQUFDO0lBQ3RDSSxJQUFJLEVBQUUsQ0FBaUI7SUFDdkJILFlBQVksRUFBWkEsWUFBWTtJQUNaSSxRQUFRLEVBQUUsQ0FBQztRQUNQQyxVQUFVLEVBQVZBLFFBQVEsQ0FBR0MsS0FBSyxFQUFDQyxNQUFNLEVBQUUsQ0FBQztZQUN0QkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLE1BQU0sQ0FBQ0csT0FBTztZQUMxQkosS0FBSyxDQUFDTCxJQUFJLEdBQUdNLE1BQU0sQ0FBQ0csT0FBTztRQUMvQixDQUFDO0lBQ0wsQ0FBQztBQUNMLENBQUM7QUFFTSxHQUFLLENBQUVMLFVBQVUsR0FBSUgsb0JBQW9CLENBQUNTLE9BQU8sQ0FBMUNOLFVBQVU7QUFDeEIsK0RBQWVILG9CQUFvQixDQUFDVSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3N0b3JlL3NsaWNlcy9nYXJtaW5TbGVlcERhdGVTbGljZS5qcz80NWY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNsaWNlfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xuXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gICAgZGF0ZTogXCIyMDE2LTAxLTEwXCJcbn1cbmNvbnN0IGdhcm1pblNsZWVwRGF0ZVNsaWNlID0gY3JlYXRlU2xpY2Uoe1xuICAgIG5hbWU6ICdnYXJtaW5TbGVlcERhdGUnLFxuICAgIGluaXRpYWxTdGF0ZSxcbiAgICByZWR1Y2Vyczoge1xuICAgICAgICBjaGFuZ2VEYXRlKHN0YXRlLGFjdGlvbikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYWN0aW9uLnBheWxvYWQpXG4gICAgICAgICAgICBzdGF0ZS5kYXRlID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICAgIH1cbiAgICB9XG59KTtcblxuZXhwb3J0IGNvbnN0IHtjaGFuZ2VEYXRlfSA9IGdhcm1pblNsZWVwRGF0ZVNsaWNlLmFjdGlvbnM7XG5leHBvcnQgZGVmYXVsdCBnYXJtaW5TbGVlcERhdGVTbGljZS5yZWR1Y2VyOyJdLCJuYW1lcyI6WyJjcmVhdGVTbGljZSIsImluaXRpYWxTdGF0ZSIsImRhdGUiLCJnYXJtaW5TbGVlcERhdGVTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsImNoYW5nZURhdGUiLCJzdGF0ZSIsImFjdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJwYXlsb2FkIiwiYWN0aW9ucyIsInJlZHVjZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/store/slices/garminSleepDateSlice.js\n");

/***/ })

});
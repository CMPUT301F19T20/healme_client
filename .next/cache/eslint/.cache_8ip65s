[{"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/404.js":"1","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/_app.js":"2","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/_document.js":"3","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/account.js":"4","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/foodrx.js":"5","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/garmin/index.js":"6","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/index.js":"7","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/lightbuzz.js":"8","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/survey.js":"9","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/index.js":"10","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/login.js":"11","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/patients.js":"12","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/products.js":"13","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/register.js":"14","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/settings.js":"15","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Activities.js":"16","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Heartrate.js":"17","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Intensity.js":"18","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Steps.js":"19","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/account/account-profile-details.js":"20","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/account/account-profile.js":"21","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/CBX.js":"22","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/ChartData.js":"23","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/Collapsible.js":"24","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/ColumnFilter.js":"25","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/GlobalFilter.js":"26","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/PageTable.js":"27","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/BasicBarChart.js":"28","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/CircularProgressBar.js":"29","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/GarminHRLineChart.js":"30","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/GoalBarchart.js":"31","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/HorizontalBarChart.js":"32","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/Piechart.js":"33","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/Radarchart.js":"34","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/Speedometer.js":"35","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/checkbox.js":"36","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/columns.js":"37","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/customer-list-results.js":"38","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/customer-list-toolbar.js":"39","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/detail-navbar.js":"40","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Button.js":"41","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/DateFilter.js":"42","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Garmin.js":"43","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminActivityItem.js":"44","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminActivityList.js":"45","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminCard.js":"46","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminHRGrid.js":"47","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminHRList.js":"48","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminIntensityGrid.js":"49","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminIntensityList.js":"50","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminNavbar.js":"51","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminOverallSummary.js":"52","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminStepsGrid.js":"53","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminSummary.js":"54","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/General.js":"55","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Lightbuzz.js":"56","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/RXFood.js":"57","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/RXFoodSummary.js":"58","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Survey.js":"59","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/patientDetailsFunc.js":"60","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/budget.js":"61","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/latest-orders.js":"62","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/latest-products.js":"63","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/sales.js":"64","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/tasks-progress.js":"65","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/total-customers.js":"66","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/total-profit.js":"67","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/traffic-by-device.js":"68","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard-layout.js":"69","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard-navbar.js":"70","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard-sidebar.js":"71","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/landing/LandingPage.js":"72","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/landing/Showcase.js":"73","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/logo.js":"74","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/nav-item.js":"75","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/product/product-card.js":"76","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/product/product-list-toolbar.js":"77","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/settings/settings-notifications.js":"78","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/settings/settings-password.js":"79","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/severity-pill.js":"80","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/PatientsTable.js":"81","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/PageDataTable.js":"82"},{"size":1916,"mtime":1656829290808,"results":"83","hashOfConfig":"84"},{"size":1546,"mtime":1661385351516,"results":"85","hashOfConfig":"84"},{"size":2542,"mtime":1657568554839,"results":"86","hashOfConfig":"84"},{"size":1223,"mtime":1661481416639,"results":"87","hashOfConfig":"84"},{"size":3190,"mtime":1661484836166,"results":"88","hashOfConfig":"84"},{"size":3242,"mtime":1661484912866,"results":"89","hashOfConfig":"84"},{"size":1231,"mtime":1661302785698,"results":"90","hashOfConfig":"84"},{"size":270,"mtime":1661491335994,"results":"91","hashOfConfig":"84"},{"size":1224,"mtime":1661387383804,"results":"92","hashOfConfig":"84"},{"size":331,"mtime":1657944762753,"results":"93","hashOfConfig":"84"},{"size":4799,"mtime":1661462699171,"results":"94","hashOfConfig":"84"},{"size":2004,"mtime":1661462823874,"results":"95","hashOfConfig":"84"},{"size":1475,"mtime":1656829290812,"results":"96","hashOfConfig":"84"},{"size":8724,"mtime":1657958124708,"results":"97","hashOfConfig":"84"},{"size":943,"mtime":1656829290813,"results":"98","hashOfConfig":"84"},{"size":2389,"mtime":1661383431015,"results":"99","hashOfConfig":"84"},{"size":1684,"mtime":1661378502551,"results":"100","hashOfConfig":"84"},{"size":1930,"mtime":1661378465892,"results":"101","hashOfConfig":"84"},{"size":1676,"mtime":1661378482597,"results":"102","hashOfConfig":"84"},{"size":4389,"mtime":1661480924491,"results":"103","hashOfConfig":"84"},{"size":1383,"mtime":1661481380779,"results":"104","hashOfConfig":"84"},{"size":419,"mtime":1656829290785,"results":"105","hashOfConfig":"84"},{"size":412,"mtime":1656829290785,"results":"106","hashOfConfig":"84"},{"size":869,"mtime":1661214314345,"results":"107","hashOfConfig":"84"},{"size":265,"mtime":1656829290787,"results":"108","hashOfConfig":"84"},{"size":240,"mtime":1657957498026,"results":"109","hashOfConfig":"84"},{"size":6317,"mtime":1661484714734,"results":"110","hashOfConfig":"84"},{"size":1405,"mtime":1661457323314,"results":"111","hashOfConfig":"84"},{"size":1026,"mtime":1660335488269,"results":"112","hashOfConfig":"84"},{"size":1539,"mtime":1661198738730,"results":"113","hashOfConfig":"84"},{"size":1820,"mtime":1661386835615,"results":"114","hashOfConfig":"84"},{"size":693,"mtime":1658801954220,"results":"115","hashOfConfig":"84"},{"size":826,"mtime":1660259008308,"results":"116","hashOfConfig":"84"},{"size":348,"mtime":1661457328959,"results":"117","hashOfConfig":"84"},{"size":1043,"mtime":1656901971177,"results":"118","hashOfConfig":"84"},{"size":0,"mtime":1656829290791,"results":"119","hashOfConfig":"84"},{"size":1769,"mtime":1656829290791,"results":"120","hashOfConfig":"84"},{"size":5270,"mtime":1656829290792,"results":"121","hashOfConfig":"84"},{"size":2157,"mtime":1657957254217,"results":"122","hashOfConfig":"84"},{"size":1522,"mtime":1660953907643,"results":"123","hashOfConfig":"84"},{"size":470,"mtime":1658954952752,"results":"124","hashOfConfig":"84"},{"size":1439,"mtime":1661308080112,"results":"125","hashOfConfig":"84"},{"size":1207,"mtime":1661190976679,"results":"126","hashOfConfig":"84"},{"size":2010,"mtime":1661213262880,"results":"127","hashOfConfig":"84"},{"size":1568,"mtime":1661378832626,"results":"128","hashOfConfig":"84"},{"size":3665,"mtime":1660707877332,"results":"129","hashOfConfig":"84"},{"size":1607,"mtime":1661486148169,"results":"130","hashOfConfig":"84"},{"size":1861,"mtime":1661308128315,"results":"131","hashOfConfig":"84"},{"size":2091,"mtime":1661486226430,"results":"132","hashOfConfig":"84"},{"size":2347,"mtime":1661308154556,"results":"133","hashOfConfig":"84"},{"size":2548,"mtime":1661386578998,"results":"134","hashOfConfig":"84"},{"size":4227,"mtime":1661376441064,"results":"135","hashOfConfig":"84"},{"size":2636,"mtime":1661486362972,"results":"136","hashOfConfig":"84"},{"size":1920,"mtime":1661214471777,"results":"137","hashOfConfig":"84"},{"size":749,"mtime":1658517960494,"results":"138","hashOfConfig":"84"},{"size":786,"mtime":1658517977366,"results":"139","hashOfConfig":"84"},{"size":12673,"mtime":1661453828989,"results":"140","hashOfConfig":"84"},{"size":2818,"mtime":1660851349603,"results":"141","hashOfConfig":"84"},{"size":2742,"mtime":1661458230746,"results":"142","hashOfConfig":"84"},{"size":1689,"mtime":1659042998268,"results":"143","hashOfConfig":"84"},{"size":1515,"mtime":1656829290793,"results":"144","hashOfConfig":"84"},{"size":3542,"mtime":1656829290794,"results":"145","hashOfConfig":"84"},{"size":2302,"mtime":1656829290794,"results":"146","hashOfConfig":"84"},{"size":3050,"mtime":1656829290795,"results":"147","hashOfConfig":"84"},{"size":1160,"mtime":1656829290796,"results":"148","hashOfConfig":"84"},{"size":1482,"mtime":1656829290796,"results":"149","hashOfConfig":"84"},{"size":961,"mtime":1656829290797,"results":"150","hashOfConfig":"84"},{"size":2759,"mtime":1656829290797,"results":"151","hashOfConfig":"84"},{"size":1050,"mtime":1658183939683,"results":"152","hashOfConfig":"84"},{"size":2397,"mtime":1656829290798,"results":"153","hashOfConfig":"84"},{"size":5580,"mtime":1658183835808,"results":"154","hashOfConfig":"84"},{"size":202,"mtime":1657567065918,"results":"155","hashOfConfig":"84"},{"size":304,"mtime":1657956684370,"results":"156","hashOfConfig":"84"},{"size":2667,"mtime":1656829290799,"results":"157","hashOfConfig":"84"},{"size":1510,"mtime":1656829290799,"results":"158","hashOfConfig":"84"},{"size":2134,"mtime":1656829290800,"results":"159","hashOfConfig":"84"},{"size":1809,"mtime":1656829290800,"results":"160","hashOfConfig":"84"},{"size":2995,"mtime":1656829290801,"results":"161","hashOfConfig":"84"},{"size":2173,"mtime":1657587627850,"results":"162","hashOfConfig":"84"},{"size":1243,"mtime":1656829290801,"results":"163","hashOfConfig":"84"},{"size":315,"mtime":1661306033481,"results":"164","hashOfConfig":"84"},{"size":2365,"mtime":1661385618973,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6q6jm7",{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":15,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":20,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"361"},"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/404.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/_app.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/_document.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/account.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/foodrx.js",["362","363","364","365","366","367","368","369"],"import React, { useEffect,useState } from 'react'\nimport Detail_navbar from 'src/components/customer/detail-navbar'\nimport RXFood from 'src/components/customer/details/RXFood'\nimport { patient_name } from '.'\nimport { chartBoolList } from 'src/components/customer/PageTable'\nimport { foodrxData } from 'src/components/customer/PageTable'\nimport { useRouter } from 'next/router'\n\n\n\nconst Foodrx = (props) => {\n  const [foodrxData,setFoodrxData] = useState();\n\n  useEffect(() => {\n    async function getData(){\n      const firstname = sessionStorage.getItem('currPatient');\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body : JSON.stringify({firstName:firstname})\n      };\n      const data = await fetch('http://localhost:4000/patientDetails/foodrxData', requestOptions)\n      .then(res => {\n          if (res.ok){\n              return res.json();\n          }\n          if(!res || !res.ok || res.status >= 400){\n              return;\n          }\n      })\n      .then(data => {\n          if (data){\n              return data;\n          }\n      })\n      setFoodrxData(data);\n      return data;\n    };\n    getData();\n  },[])\n\n  if (foodrxData!=undefined){\n    console.log(foodrxData)\n    const macroDistSeries = foodrxData.macronutrientsPct;\n    const avgPlateBreakfastSeries = foodrxData.avgPlateBreakfast;\n    const avgPlateLunchSeries = foodrxData.avgPlateLunch;\n    const avgPlateDinnerSeries = foodrxData.avgPlateDinner;\n    const calorieSeries = foodrxData.calorieDailySum;\n    const carboSeries = foodrxData.carbDailySum;\n    const proteinSeries = foodrxData.proteinPct;\n    const fatTargetPct = foodrxData.fatTargetPct.fat_ratio_pct_of_target;\n    const fatSeries = foodrxData.fatFreq;\n    const grainSeries = foodrxData.grainFreq;\n    const avgCarbo = foodrxData.avgCarbo;\n    const avgCalorie = foodrxData.avgcal;\n    const totalCarbo = foodrxData.totalCarbo;\n    const totalCalorie = foodrxData.totalCalorie;\n    const avgProtein = foodrxData.proteinAvg;\n    const numDays = foodrxData.numDays;\n    const datePeriods = foodrxData.datePeriods;\n    const micronutrients = foodrxData.micronutrients;\n    const n_meals_items = foodrxData.mealItemsCount;\n    const mealsCount = foodrxData.mealsCount;\n    \n\n\n    return (\n      <div>\n          <Detail_navbar firstName={foodrxData.firstName} lastName={foodrxData.lastName}/>\n          <RXFood firstName={foodrxData.firstName} lastName={foodrxData.lastName} avgcal={avgCalorie} calorieTotal={totalCalorie}\n          avgCarbo={avgCarbo} totalCarbo={totalCarbo} proteinAvg={avgProtein} nDays={numDays} fatRatio={fatTargetPct}\n          fatSeries={fatSeries} macroSeries={macroDistSeries} avgBreakfastSeries={avgPlateBreakfastSeries} \n          avgLunchSeries={avgPlateLunchSeries}  avgDinnerSeries={avgPlateDinnerSeries}\n          calSeries={calorieSeries} carbSeries={carboSeries} mealsCount={mealsCount}\n          proteinSeries={proteinSeries} avgGrainSeries={grainSeries} \n          datePeriods={datePeriods} micronutrients={micronutrients} itemCount={n_meals_items}/>\n      </div>\n    )\n  }else{\n    return null;\n  }\n  \n}\n\nexport default Foodrx","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/garmin/index.js",["370","371"],"import React, { useEffect, useState } from 'react'\nimport Detail_navbar from 'src/components/customer/detail-navbar'\nimport { patient_name } from '../index'\nimport { garminData } from 'src/components/customer/PageTable'\nimport { Garmin } from 'src/components/customer/details/Garmin'\nimport { useRouter } from 'next/router'\n\nconst UserGarmin = () => {\n\n  const [garminData,setGarminData]=useState();\n\n  useEffect(() => {\n    const firstname = sessionStorage.getItem('currPatient')\n    async function getData(){\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body : JSON.stringify({firstName:firstname})\n      };\n      const data = await fetch('http://localhost:4000/patientDetails/garminData', requestOptions)\n      .then(res => {\n          if (res.ok){\n              return res.json();\n          }\n          if(!res || !res.ok || res.status >= 400){\n              return;\n          }\n      })\n      .then(data => {\n          if (data){\n              return data;\n          }\n      })\n      setGarminData(data);\n      return data;\n    };\n    getData();\n  },[])\n\n  if (garminData!=undefined){\n    const getDataAvg = (table,category) => {\n      var total = 0;\n      var item;\n      for (let i=0;i<table.length;i++){\n        item = table[i];\n        total = total + parseInt(item[category]);\n      }\n      var avg = parseInt(total/(table.length));\n      return avg\n    }\n  \n    const secToMin = (val) => {\n      return parseInt(val/60);\n    }\n    const getRankCategory = (val) => {\n      if (val<5000){\n        return 'Sedentary';\n      }else if(5000 <= val < 7500){\n        return 'Low Active'\n      }else if(7500 <= val < 10000){\n        return 'Somewhat Active'\n      }else if(10000 <= val < 12500){\n        return 'Active'\n      }else{\n        return 'Highly Active'\n      }\n    }\n    const overall_info = {};\n    var avgSteps = getDataAvg(garminData.healthSummary,\"steps\");\n    overall_info.avgSteps = avgSteps;\n    var stepsCategory = getRankCategory(avgSteps);\n    overall_info.stepsCategory = stepsCategory;\n    var avgIntenseMins = secToMin(getDataAvg(garminData.healthSummary,\"vigorousintensitydurationinseconds\"));\n    overall_info.avgIntenseMins = avgIntenseMins;\n    var avgIntenseMinsCategory = getRankCategory(avgIntenseMins);\n    overall_info.avgIntenseMinsCategory = avgIntenseMinsCategory;\n    var avgActivityTime = secToMin(getDataAvg(garminData.activitySummary,\"durationinseconds\"));\n    overall_info.avgActivityTime = avgActivityTime;\n    var avgCalorie = getDataAvg(garminData.calorieSummary,\"activekilocalories\");\n    overall_info.avgCalorie = avgCalorie;\n    var avgRestHR = getDataAvg(garminData.healthSummary,\"restingheartrateinbeatsperminute\");\n    overall_info.avgRestHR = avgRestHR;\n    var avgHighHR = getDataAvg(garminData.healthSummary,\"maxheartrateinbeatsperminute\");\n    overall_info.avgHighHR = avgHighHR;\n  \n    return (\n      <div>\n          <Detail_navbar firstName={garminData.firstName} lastName={garminData.lastName}/>\n          <Garmin overall_info={overall_info} data={garminData} name={garminData.firstName+garminData.lastName}/>\n      </div>\n    )\n  }else{\n    return null;\n  }\n}\n\n\nexport default UserGarmin","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/index.js",["372","373"],"import React, {useState} from 'react';\nimport Detail_navbar from 'src/components/customer/detail-navbar';\nimport General from 'src/components/customer/details/General';\nimport { useRouter } from 'next/router';\n\n\nexport const PatientDetails = () => {\n    \n    const router = useRouter();\n    console.log(router.query);\n    const firstName = router.query.firstname;\n    const lastName = router.query.lastname;\n    \n    const generalRadarSeries = [{\n        name:'Summary category',\n        data: [40,30,50,80,25,75,65,15,20,10],\n    }];\n    const generalRadarOptions = {\n        chart:{\n            height:200,\n            width: 400,\n            type: 'radar'\n        },\n        title: {\n            text: 'General Info'\n        },\n        \n        labels: ['EASA Emotional','EASA physical','Macronutrients','Caloric intake','Protein intake','Moderate-to-vigorous physical activity minutes','step count','light physical activity','Physical activity minutes','Physical functioning'] \n    };\n\n\n    \n    return (\n        <div>\n            <Detail_navbar firstName={firstName} lastName={lastName}/>\n            <General series={generalRadarSeries} options={generalRadarOptions} />\n        </div>\n    )\n}\n\nexport default PatientDetails;\n","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/lightbuzz.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/customers/[patientName]/survey.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/index.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/login.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/patients.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/products.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/register.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/pages/settings.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Activities.js",["374","375","376"],"import React, {useState} from 'react'\nimport GarminActivityList from 'src/components/customer/details/GarminActivityList';\nimport GarminNavbar from 'src/components/customer/details/GarminNavbar';\nimport PageDataTable from '../customer/details/PageDataTable';\n\n\nconst Activities = (props) => {\n    const [period,setPeriod] = useState('4w')\n    const handlePeriodState = (period) => {\n        setPeriod(period);\n        props.changeState(period);\n    };\n    console.log(props.data)\n    const date = props.data.healthSummary.map(row => row['calendardate']);\n    const activityType = props.data.activitySummary.map(row => row['activitytype']);\n    const duration = props.data.activitySummary.map(row => row['durationinseconds']);\n    const distance = props.data.activitySummary.map(row => row['distanceinmeters']);\n    const activeCal = props.data.calorieSummary.map(row => row['activekilocalories']);\n    const bmrCal = props.data.calorieSummary.map(row => row['bmrkilocalories']);\n    \n\n\n    const data = [];\n    for (let i=0;i<date.length;i++){\n        data.push({date:date[i],activityType:activityType[i],calorie:parseInt(activeCal[i])+parseInt(bmrCal[i]),duration:duration[i],distance:distance[i]});\n    }\n    data.sort((a,b) => (a.date>b.date)?1:-1);\n    let subData;\n    if (period=='7d'){\n        subData = data.slice(0,7);\n    }else if(period=='4w'){\n        subData = data.slice(0,30);\n    }else{\n        subData = data;\n    }\n\n    const activity_cols = [\n        {name:'Date', selector:row=>row.date, sortable:true, right:true},\n        {name:'Activity Type', selector:row=>row.activityType, sortable:true, right:true},\n        {name:'Total Calories (KCAL)', selector:row=>row.calorie, sortable:true, right:true},\n        {name:'Duration (Mins)', selector:row=>row.duration, sortable:true, right:true},\n        {name:'Distance (Ms)', selector:row=>row.distance, sortable:true, right:true},\n    ]\n\n    return (\n        <div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminNavbar getPeriod={handlePeriodState} type={'activity'}/>\n            </div>\n            <div style={{marginBottom:'1rem'}}>\n                <PageDataTable cols={activity_cols} data={subData} pagination={true} \n                        placeHolderText={'date'} filterCol={'date'} title={'Activities List'}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Activities","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Heartrate.js",["377"],"import React, {useEffect,useState} from 'react'\nimport { useRouter } from 'next/router';\nimport GarminHRLineChart from 'src/components/customer/charts/GarminHRLineChart';\nimport GarminHRGrid from 'src/components/customer/details/GarminHRGrid';\nimport GarminNavbar from 'src/components/customer/details/GarminNavbar';\nimport GarminHRList from 'src/components/customer/details/GarminHRList';\n\nconst Heartrate = (props) => {\n    const [period,setPeriod] = useState('4w')\n    const handlePeriodState = (period) => {\n        setPeriod(period);\n        props.changeState(period);\n    };\n    \n    const date = props.data.healthSummary.map(row => row['calendardate']);\n    const restHR= props.data.healthSummary.map(row => row['restingheartrateinbeatsperminute']);\n    const maxHR = props.data.healthSummary.map(row => row['maxheartrateinbeatsperminute'])\n\n    const data = [];\n    for (let i=0;i<date.length;i++){\n        data.push({date:date[i],restHR:restHR[i],highHR:maxHR[i]});\n    }\n    data.sort((a,b) => (a.date>b.date)?1:-1);\n    let subData;\n    if (period=='7d'){\n        subData = data.slice(0,7);\n    }else if(period=='4w'){\n        subData = data.slice(0,30);\n    }else{\n        subData = data;\n    }\n\n    \n    return (\n        <div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminNavbar getPeriod={handlePeriodState} type={'heartrate'}/>\n            </div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminHRGrid data={subData} />\n            </div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminHRLineChart data={subData} />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Heartrate","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Intensity.js",["378","379","380"],"import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport GarminNavbar from 'src/components/customer/details/GarminNavbar';\nimport { GoalBarChart } from 'src/components/customer/charts/GoalBarchart';\nimport GarminIntensityGrid from 'src/components/customer/details/GarminIntensityGrid';\nimport GarminIntensityList from 'src/components/customer/details/GarminIntensityList';\n\nconst Intensity = (props) => {\n    \n    const [period,setPeriod] = useState('4w')\n    const handlePeriodState = (period) => {\n        setPeriod(period);\n        props.changeState(period);\n    };\n    \n    const date = props.data.healthSummary.map(row => row['calendardate']);\n    const intenseDuration = props.data.healthSummary.map(row => row['vigorousintensitydurationinseconds']);\n    const moderateDuration = props.data.healthSummary.map(row => row['moderateintensitydurationinseconds']);\n\n    \n    const data = [];\n    for (let i=0;i<date.length;i++){\n        data.push({date:date[i],moderateDuration:moderateDuration[i],intenseDuration:intenseDuration[i]});\n    }\n    data.sort((a,b) => (a.date>b.date)?1:-1);\n    \n    let subData;\n    if (period=='7d'){\n        subData = data.slice(0,7);\n    }else if(period=='4w'){\n        subData = data.slice(0,30);\n    }else{\n        subData = data;\n    }\n\n\n    return (\n        <div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminNavbar getPeriod={handlePeriodState} type={'intensity'}/>\n            </div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminIntensityGrid data={subData} />\n            </div>\n            <div style={{marginBottom:'1rem'}}>\n                <GoalBarChart data={subData} goal={80} color={props.color}/>\n            </div>\n            <div>\n                <GarminIntensityList data={subData} goal={80}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Intensity","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/GarminDetails/Steps.js",["381","382"],"import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport BasicBarChart from 'src/components/customer/charts/BasicBarChart'\nimport GarminNavbar from 'src/components/customer/details/GarminNavbar'\nimport GarminStepsGrid from 'src/components/customer/details/GarminStepsGrid'\n\nconst Steps = (props) => {\n    const date = props.data.healthSummary.map(row => row['calendardate']);\n    const distance = props.data.activitySummary.map(row => row['distanceinmeters']);\n    const steps = props.data.healthSummary.map(row => row['steps'])\n\n\n    const [period,setPeriod] = useState('4w')\n    const handlePeriodState = (period) => {\n        setPeriod(period);\n        props.changeState(period);\n    };\n\n    const data = [];\n    for (let i=0;i<date.length;i++){\n        data.push({date:date[i],distance:distance[i],stepsCount:steps[i]});\n    }\n    data.sort((a,b) => (a.date>b.date)?1:-1);\n\n    let subData;\n    if (period=='7d'){\n        subData = data.slice(0,7);\n        subData.isNot7d = false;\n    }else if(period=='4w'){\n        subData = data.slice(0,30);\n        subData.isNot7d = true;\n    }else{\n        subData = data;\n        subData.isNot7d = true;\n    }\n\n    return (\n        <div>\n            <div style={{marginBottom:'1rem'}}>\n                <GarminNavbar getPeriod={handlePeriodState} type={'steps'}/>\n            </div>\n            <div>\n                <GarminStepsGrid data={subData}/>\n            </div>\n            <div style={{marginBottom:'1rem'}}>\n                <BasicBarChart data={subData} color={'#0FB4E4'} text={'Steps Count'}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Steps","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/account/account-profile-details.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/account/account-profile.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/CBX.js",["383"],"import React from \"react\";\n\nexport const CBX = React.forwardRef(({ indeterminate, ...rest },ref) => {\n    const defaultRef = React.useRef()\n    const resolvedRef = ref || defaultRef\n\n    React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate\n    },[resolvedRef,indeterminate])\n    \n    return (\n        <>\n            <input type='checkbox' ref={resolvedRef} {...rest} />\n        </>\n    )\n})","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/ChartData.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/Collapsible.js",["384"],"import React,{useState, useRef, useEffect} from 'react';\n\n\nexport const Collapsible = (props) => {\n\n    const [isOpen,setIsOpen] = useState(false);\n\n    const parentRef = useRef();\n    const color = props.color;\n    return (\n        <div className=\"collapsible\">\n            <button className=\"toggle\" style={{backgroundColor:color}} onClick={() => setIsOpen(!isOpen)}>{props.label}</button>\n            <div className=\"content-parent\" \n                ref={parentRef} \n                style={isOpen ? \n                    {\n                        height: parentRef.current.scrollHeight + 'px',\n                    }\n                    :{\n                        height: '0px',\n                    }\n                }\n            >\n                <div className=\"content\">{props.children}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Collapsible;\n","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/ColumnFilter.js",["385"],"import React from 'react'\n\nexport const ColumnFilter = ({column}) => {\n    const {filterValue, setFilter} = column;\n  return (\n    <span>\n        Search: {' '}\n        <input value={filterValue || ''} onChange={(e) => setFilter(e.target.value)} />\n    </span>\n  )\n}","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/GlobalFilter.js",["386"],"import React from 'react'\n\nexport const GlobalFilter = ({filter, setFilter}) => {\n  return (\n    <span>\n        Search Participants: {' '}\n        <input value={filter || ''} onChange={(e) => setFilter(e.target.value)} />\n    </span>\n  )\n}\n","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/PageTable.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import React, {useEffect, useMemo, useState} from 'react'\nimport {useTable, useSortBy,usePagination,useGlobalFilter} from 'react-table';\nimport {COLUMNS, GROUPED_COLUMNS} from './columns';\nimport { CBX } from './CBX';\nimport { GlobalFilter } from './GlobalFilter';\nimport { useRouter } from 'next/router';\n\nexport const PageTable = (props) => {\n    console.log(props)\n    const userData = props.patients.patients;\n    userData.map(row => {\n        row.created_date = row.created_date.slice(0,10);\n    })\n    const mock_data = userData;\n    const columns = useMemo(() => COLUMNS,[]);\n    const data = useMemo(() => mock_data,[]);\n\n    const router = useRouter();\n\n    function getDetails(firstname,lastname){\n        if (sessionStorage.getItem('currPatient') === null){\n            sessionStorage.setItem('currPatient',firstname);\n        }else{\n            sessionStorage.removeItem('currPatient');\n            sessionStorage.setItem('currPatient',firstname);\n        }\n        const path = '/customers/' + firstname;\n        router.push({\n            pathname:path,\n            query:{firstname,lastname}\n        });\n    };\n\n    const {\n        getTableProps,\n        getTablebodyProps,\n        headerGroups,\n        page,\n        nextPage,\n        previousPage,\n        canNextPage,\n        canPreviousPage,\n        prepareRow,\n        pageOptions,\n        state,\n        setGlobalFilter,\n        gotoPage,\n        pageCount,\n        setPageSize,\n        selectedFlatRows,\n        allColumns,\n        getToggleHideAllColumnsProps\n\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {pageIndex:0}\n        },\n        useGlobalFilter,\n        useSortBy,\n        usePagination,\n    )\n    \n    console.log(page)\n    const {pageIndex, pageSize, globalFilter} = state;\n    return (\n        <>\n            <div className='filter' style={{position:'relative', left:'800px'}}>\n                <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n                <div style={{marginTop: '80px', marginRight: '80px'}}>\n                    <div>\n                        <CBX {...getToggleHideAllColumnsProps()} /> Toggle All\n                    </div>\n                    {\n                        allColumns.map(column => (\n                            <div key={column.id}>\n                                <label>\n                                    <input type='checkbox' {...column.getToggleHiddenProps()} />\n                                    {column.Header}\n                                </label>\n                            </div>\n                        ))\n                    } \n                </div>\n                <table {...getTableProps()} id=\"table\">\n                    <thead>\n                        {headerGroups.map((headerGroup) => (\n                            <tr key={1}{...headerGroup.getHeaderGroupProps()}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th key={column.id} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {column.render('Header')}\n                                            <span>\n                                                {column.isSorted ? (column.isSortedDesc ? '🔽' : '🔼'): ''}\n                                            </span>\n                                        </th>\n                                    ))\n                                }      \n                            </tr>\n                        ))}                \n                    </thead>\n                    <tbody {...getTablebodyProps}>\n                        {\n                            page.map(row => {\n                                prepareRow(row)\n                                return (\n                                    <tr key={row.id}{...row.getRowProps()} onClick={() => getDetails(row.original.first_name,row.original.last_name)}>\n                                        {row.cells.map((cell) => {\n                                            return <td key={cell.value} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })}\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                    \n                </table>\n            </div>\n            \n            <div style={{display: 'flex', justifyContent: 'center', marginTop:\"50px\"}}>\n                <div>\n                    <span style={{marginRight:\"40px\"}}>\n                        Page{' '}\n                        <strong>\n                            {pageIndex+1} of {pageOptions.length}\n                        </strong>{' '}\n                    </span>\n                    <span style={{marginRight:\"40px\"}}>\n                        | Go to page: {' '}\n                        <input type='number' defaultValue = {pageIndex+1}\n                        onChange={e => {\n                            const pagenumber = e.target.value ? Number(e.target.value)-1 : 0;\n                            gotoPage(pagenumber);\n                        }}\n                        style={{width:'50px'}} />\n                    </span>\n                    <select value={pageSize} onChange={e => setPageSize(Number(e.target.value))} style={{marginRight:\"40px\"}}>\n                        {\n                            [10,25,50].map(pageSize => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))\n                        }\n                    </select>\n                    <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\n                    <button onClick={() => gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</button>\n                </div>\n            </div>\n        </>\n    )\n    \n}\n","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/BasicBarChart.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/CircularProgressBar.js",["403","404"],"import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\n\nconst CircularProgressBar = (props) => {\n    let value = props.value;\n    if (props.value > 100){\n        value = 100;\n    }\n\n    return (\n        <Box sx={{ position: 'relative', display: 'inline-flex'}}>\n            <CircularProgress variant=\"determinate\" value={value} size='4rem'/>\n            <Box\n                sx={{\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0,\n                position: 'absolute',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                }}\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n                {`${Math.round(value)}%`}\n                </Typography>\n            </Box>\n        </Box>\n    )\n}\n\nexport default CircularProgressBar","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/GarminHRLineChart.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/GoalBarchart.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/HorizontalBarChart.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/Piechart.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/Radarchart.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/charts/Speedometer.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/checkbox.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/columns.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/customer-list-results.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/customer-list-toolbar.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/detail-navbar.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Button.js",["405"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonStyle = styled.button`\n\tbackground-color: #2979ff;\n\tborder: none;\n\tcolor: white;\n\tpadding: 8px 32px 8px 32px;\n\ttext-align: center;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tfont-size: 16px;\n\tborder-radius: 3px;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\n// eslint-disable-next-line react/prop-types\nexport default ({ children, ...rest }) => <ButtonStyle {...rest}>{children}</ButtonStyle>;","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/DateFilter.js",["406"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { Menu } from '@mui/material';\n\nexport default function DateFilter(props) {\n    const [date, setDate] = React.useState(props.datePeriods[0].date_since.slice(0,10)+' to '+ props.datePeriods[0].date_until.slice(0,10));\n    console.log(props.datePeriods)\n    const handleChange = (event) => {\n        const newDate = event.target.value;\n        setDate(event.target.value);\n        props.getDate(newDate)\n    };\n    var datePeriods = props.datePeriods.map(datePeriod => {\n\n        const period = datePeriod.date_since.slice(0,10) + \" to \" + datePeriod.date_until.slice(0,10)\n        return <MenuItem key={period} value={period}>{period} (session {datePeriod.session_id})</MenuItem>\n    });\n    \n    return (\n        <Box sx={{ width:500 }}>\n        <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Select Time Periods</InputLabel>\n            <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={date}\n            label=\"Select Time Periods\"\n            onChange={handleChange}\n            >\n            {datePeriods}\n            </Select>\n        </FormControl>\n        </Box>\n    );\n}","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Garmin.js",["407","408","409"],"import React from 'react'\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport GarminCard from './GarminCard';\nimport { garminData } from '../PageTable';\nimport GarminSummary from './GarminSummary';\nimport GarminOverallSummary from './GarminOverallSummary';\n\n\nexport const Garmin = (props) => {\n  const avgSteps = props.overall_info.avgSteps;\n  const avgStepsCategory = props.overall_info.stepsCategory;\n  const avgIntenseMins = props.overall_info.avgIntenseMins;\n  const avgIntenseMinsCategory = props.overall_info.avgIntenseMinsCategory;\n  const avgActivityTime = props.overall_info.avgActivityTime;\n  const avgCalorie = props.overall_info.avgCalorie;\n  const avgRestHR = props.overall_info.avgRestHR;\n  const avgHighHR = props.overall_info.avgHighHR;\n  return (\n    <div>\n      <GarminOverallSummary avgSteps={avgSteps} avgStepsCategory={avgStepsCategory}\n          avgTime={avgIntenseMins} avgTimeCategory={avgIntenseMinsCategory} avgDuration={avgActivityTime}\n          avgEnergy={avgCalorie} avgRestHR={avgRestHR} avgHighHR={avgHighHR} name={props.name}/>\n      <GarminSummary data={props.data}/>\n    </div>\n  )\n}\n","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminActivityItem.js",["410","411","412","413","414","415"],"import React from 'react'\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nconst GarminActivityItem = (props) => {\n\n    const activityType = props.type;\n    const date = props.date;\n    const duration = parseInt(parseInt(props.duration)/60);\n    const distance = parseInt(props.distance);\n\n    const directToActivityDetail = (data,username) => {\n        const pathname = \"/customers/\"+username+\"/garmin/activity/details\";\n        \n        router.push({\n            pathname:pathname,\n            query:data\n        },pathname)\n        \n    };\n\n    if (props.period == '7d'){\n        summaryText = 'Activity Summary in the last 7 days'\n    }else if(props.period == '4w'){\n        summaryText = 'Activity Summary in the last 4 weeks'\n    }else{\n        'Activity Summary in the last 12 months'\n    }\n    \n    return (\n        <div>\n            <Box sx={{ my: 1, mx: 2 }}>\n                <Grid container alignItems=\"center\" gutterBottom>\n                    <Grid item xs>\n                        <Typography gutterBottom variant=\"h3\" component=\"div\">\n                             {activityType}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                    </Grid>\n                </Grid>\n                <div style={{display:'flex', justifyContent:'space-around'}}>\n                    <Typography color=\"text.secondary\" variant=\"h6\" gutterBottom>\n                        Date: {date}\n                    </Typography>\n                    <Typography color=\"text.primary\" variant=\"body1\">\n                        Duration: {duration} mins\n                    </Typography>\n                    <Typography color=\"text.primary\" variant=\"body1\">\n                        Distance: {distance} meters\n                    </Typography>\n                </div>\n            </Box>    \n        </div>\n    )\n}\n\nexport default GarminActivityItem","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminActivityList.js",["416","417"],"import React from 'react'\nimport Box from '@mui/material/Box';\nimport GarminActivityItem from './GarminActivityItem';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport { Divider } from '@mui/material';\n\n\nconst GarminActivityList = (props) => {\n\n    const activity_cols = [\n        {name:'Date', selector:row=>row.date, sortable:true, right:true},\n        {name:'Activity Type', selector:row=>row.activitytype, sortable:true, right:true},\n        {name:'Duration (Mins)', selector:row=>row.duration, sortable:true, right:true},\n        {name:'Distance (Ms)', selector:row=>row.distance, sortable:true, right:true},\n    ]\n\n    const data = props.data;\n    const rows = [];\n    for (let i=0;i<data.length;i++){\n        rows.push(\n            <div>\n                <GarminActivityItem type={data[i].activityType} date={data[i].date} \n                duration={data[i].duration} distance={data[i].distance} />\n                <Divider />\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <List\n                sx={{\n                    width: '100%',\n                    bgcolor: 'background.paper',\n                    position: 'relative',\n                    overflow: 'auto',\n                    maxHeight: 600,\n                    '& ul': { padding: 0 },\n                }}\n            >\n                {rows}\n            </List>\n        </div>\n    )\n}\n\nexport default GarminActivityList","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminCard.js",["418","419","420","421","422","423","424"],"import React from 'react'\nimport router from 'next/router';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport HikingIcon from '@mui/icons-material/Hiking';\nimport AccessAlarmIcon from '@mui/icons-material/AccessAlarm';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsBikeIcon from '@mui/icons-material/DirectionsBike';\n\nconst directToGarminDetail = (type,data,name) => {\n    const pathname = \"/customers/\"+name+\"/garmin/\"+type;\n    var query;\n    if (type == \"steps\"){\n        const date = data['steps'].map(row => row['calendardate']);\n        const steps = data['steps'].map(row => row['steps']);\n        const length = data['distance'].map(row => row['distanceinmeters']);\n        query = {date,steps,length};\n    }else if (type == \"intensity\"){\n        const date = data['intensity'].map(row => row['calendardate']);\n        const intenseDuration = data['intensity'].map(row => row['vigorousintensitydurationinseconds']);\n        const moderateDuration = data['intensity'].map(row => row['moderateintensitydurationinseconds']);\n        query = {date,intenseDuration,moderateDuration};\n    }else if(type == \"activity\"){\n        const activityType = data['activity'].map(row => row['activitytype']);\n        const duration = data['activity'].map(row => row['durationinseconds']);\n        const distance = data['activity'].map(row => row['distanceinmeters']);\n        const date = data['date'].map(row => row['calendardate']);\n        query = {activityType,duration,distance,date};\n    }else{\n        const date = data['heartrate'].map(row => row['calendardate']);\n        const avgRestHr = data['heartrate'].map(row => row['restingheartrateinbeatsperminute']);\n        const avgHighHr = data['heartrate'].map(row => row['maxheartrateinbeatsperminute']);\n        query = {date,avgRestHr,avgHighHr};\n    }\n    router.push({\n        pathname:pathname,\n        query:query\n    },pathname)\n    \n  };\nconst GarminCard = (props) => {\n\n    const firstText = props.firstText;\n    const secondText = props.secondText;\n    const desc = props.desc;\n    const type = props.type\n    const data = props.data;\n    const name = props.name;\n\n    var icon;\n    if (type == \"steps\"){\n        icon = <HikingIcon />\n    }else if(type == \"intensity\"){\n        icon = <AccessAlarmIcon />\n    }else if(type == \"activity\"){\n        icon = <DirectionsBikeIcon />\n    }else {\n        icon = <FavoriteIcon />\n    }\n\n    \n    return (\n        <div>\n            <Box sx={{ my: 3, mx: 2 }}>\n                <Grid container alignItems=\"center\" gutterBottom>\n                    <Grid item style={{marginRight:\"2rem\"}}>\n                        {icon}\n                    </Grid>\n                    <Grid item xs>\n                        <Typography gutterBottom variant=\"h3\" component=\"div\">\n                            {type}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => directToGarminDetail(type,data,name)}>Details</Button>\n                    </Grid>\n                </Grid>\n                <Typography color=\"text.secondary\" variant=\"h6\" gutterBottom>\n                    {desc}\n                </Typography>\n                <Typography color=\"text.primary\" variant=\"body1\">\n                    {firstText}\n                </Typography>\n                <Typography color=\"text.primary\" variant=\"body1\">\n                    {secondText}\n                </Typography>\n            </Box>    \n        </div>\n    )\n}\n\nexport default GarminCard","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminHRGrid.js",["425","426","427"],"import React from 'react'\nimport {Grid, Typography,Paper,Box} from '@mui/material'\nimport { styled } from '@mui/material/styles';\n\nconst HeaderItem = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n  fontWeight:'bold'\n}));\nconst DataItem = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    fontWeight:'normal'\n  }));\n\nconst GarminHRGrid = (props) => {\n    const resthr = parseInt(props.data.map(row => parseInt(row.restHR)).reduce((partialSum,a) => partialSum+a,0)/props.data.length);\n    const highhr = parseInt(props.data.map(row => parseInt(row.highHR)).reduce((partialSum,a) => partialSum+a,0)/props.data.length);\n\n    return (\n        <div>\n            <Box sx={{ width: '100%' }}>\n                <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                    <Grid item xs={6}>\n                        <HeaderItem>Avg Resting HR </HeaderItem>\n                        <DataItem>{resthr} bpm</DataItem>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <HeaderItem>Avg High HR</HeaderItem>\n                        <DataItem>{highhr} bpm</DataItem>\n                    </Grid>\n                </Grid>\n            </Box>\n        </div>\n    )\n}\n\nexport default GarminHRGrid","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminHRList.js",["428","429"],"import React from 'react'\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\n\nconst GarminHRList = (props) => {\n    const listData = props.data;\n    const weekdays = {\n        0:\"Sunday\",\n        1:\"Monday\",\n        2:\"Tuesday\",\n        3:\"Wednesday\",\n        4:\"Thursday\",\n        5:\"Friday\",\n        6:\"Saturday\"\n    }\n   \n    return (\n        <div>\n            <div>\n                <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                    {listData.map(row => (\n                        <div key={row.date} style={{display:'flex',justifyContent:'space-around'}}>\n                            <div>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <FavoriteIcon />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={row.date} secondary={weekdays[new Date(row.date).getDay()]}/>\n                                </ListItem>\n                            </div>\n                            \n                            <div style={{display:'flex', alignItems:'center'}}>\n                                <p style={{marginRight:'1rem'}}><b>Rest:</b>{row.restHR}</p>\n                                <p style={{marginRight:'1rem'}}><b>High:</b>{row.highHR}</p>\n                            </div>\n                        </div>\n                    ))}\n                </List>\n            </div>\n        </div>\n    )\n}\n\nexport default GarminHRList","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminIntensityGrid.js",["430","431","432"],"import React from 'react'\nimport {Grid, Typography,Paper,Box} from '@mui/material'\nimport { styled } from '@mui/material/styles';\n\nconst HeaderItem = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    fontWeight:'bold'\n  }));\n  const DataItem = styled(Paper)(({ theme }) => ({\n      backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      ...theme.typography.body2,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      fontWeight:'normal'\n    }));\n\nconst GarminIntensityGrid = (props) => {\n    const moderateWeekly = [], intenseWeekly = [];\n    for (let i=0;i<props.data.length;i+=7){\n        if ((i+7) > props.data.length){\n            break\n        }\n        moderateWeekly.push(props.data.slice(i,i+7).map(row => parseInt(row.moderateDuration)/60).reduce((partialSum,a) => partialSum+a,0));\n        intenseWeekly.push(props.data.slice(i,i+7).map(row => parseInt(row.intenseDuration)/60).reduce((partialSum,a) => partialSum+a,0));\n    }\n    \n    const avgModerate = parseInt(moderateWeekly.reduce((partialSum,a) => partialSum+a,0)/moderateWeekly.length);\n    const avgVigorous = parseInt(intenseWeekly.reduce((partialSum,a) => partialSum+a,0)/intenseWeekly.length);\n    \n    return (\n        <div>\n            <Box sx={{ width: '100%' }}>\n                <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                    <Grid item xs={6}>\n                        <HeaderItem>Avg Weekly Moderate</HeaderItem>\n                        <DataItem>{avgModerate} mins</DataItem>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <HeaderItem>Avg Weekly Vigorous</HeaderItem>\n                        <DataItem>{avgVigorous} mins</DataItem>\n                    </Grid>\n                </Grid>\n            </Box>\n        </div>\n    )\n}\n\nexport default GarminIntensityGrid","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminIntensityList.js",["433","434"],"import React from 'react'\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport CircularProgressBar from '../charts/CircularProgressBar';\n\nconst GarminIntensityList = (props) => {\n    let i = 0;\n    const goal = props.goal;\n    const listData = [];\n    while (i+7<=props.data.length){\n        const newDate = props.data[i].date+' to '+props.data[i+6].date;\n        const newIntense = parseInt(props.data.slice(i,i+7).map(row => parseInt(row.intenseDuration)/60).reduce((partialSum, a) => partialSum + a, 0));\n        const listRow = {date:newDate,intense:newIntense,goal:goal*7,goalPct:parseInt((newIntense/(goal*7)*100))};\n        listData.push(listRow)\n        i = i+7;\n    }\n\n    return (\n        <div>\n            <List \n                sx={{\n                    width: '100%',\n                    bgcolor: 'background.paper',\n                    position: 'relative',\n                    overflow: 'auto',\n                    maxHeight: 300,\n                    '& ul': { padding: 0 },\n                }}>\n                {listData.map(row => (\n                    <div key={row.date} style={{display:'flex',justifyContent:'space-around'}}>\n                        <div>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <EmojiEventsIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={row.date} secondary={`${row.goalPct}% of Goal`}/>\n                            </ListItem>\n                        </div>\n                        \n                        <div style={{display:'flex',justifyContent:'space-around',alignItems:'center'}}>\n                            <h4 style={{marginRight:'2rem'}}>{row.intense} min</h4>\n                            <CircularProgressBar value={row.goalPct}/>\n                        </div>\n                    </div>\n                ))}\n            </List>\n        </div>\n    );\n    \n}\n\nexport default GarminIntensityList","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminNavbar.js",["435","436"],"import React, { useEffect } from 'react'\nimport {AppBar, Toolbar, IconButton, Typography, Stack, Button} from \"@mui/material\"\nimport HikingIcon from '@mui/icons-material/Hiking';\nimport AccessAlarmIcon from '@mui/icons-material/AccessAlarm';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsBikeIcon from '@mui/icons-material/DirectionsBike';\n\nconst GarminNavbar = (props) => {\n    const getCurrPeriod = (period) => {\n        props.getPeriod(period)\n    };\n    var icon,text,curr_color;\n    if (props.type == 'steps'){\n        icon = <HikingIcon />;\n        text = 'Step Count';\n        curr_color = '#0FB4E4';\n    }else if (props.type == 'intensity'){\n        icon = <AccessAlarmIcon />;\n        text = 'Intensity Minutes';\n        curr_color = '#00A36C';\n    }else if(props.type == 'activity'){\n        icon = <DirectionsBikeIcon />;\n        text = 'Activities Tracked';\n        curr_color = '#E49B0F';\n    }else{\n        icon = <FavoriteIcon />\n        text = 'Heart Rate';\n        curr_color = '#D22B2B'\n    }\n    \n    return (\n        <div>\n            <AppBar position='static' sx={{bgcolor:curr_color }}>\n                <Toolbar sx={{display:'flex', justifyContent:'space-around'}}>\n                    <Stack direction='row' spacing={5}>\n                        <Button  \n                            onClick={() => getCurrPeriod('7d')}\n                            sx={{\n                                ':focus':{\n                                    bgcolor:'#474244',\n                                },\n                                color:'inherit'\n                            }}\n                         >7d</Button>\n                        <Button  \n                            onClick={() => getCurrPeriod('4w')}\n                            sx={{\n                                ':focus':{\n                                    bgcolor:'#474244',\n                                },\n                                color:'inherit'\n                            }}\n                        >4w</Button>\n                        <Button  \n                            onClick={() => getCurrPeriod('1y')}\n                            sx={{\n                                ':focus':{\n                                    bgcolor:'#474244',\n                                },\n                                color:'inherit'\n                            }}\n                        >1y</Button>\n                    </Stack>\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    )\n}\n\nexport default GarminNavbar\n\n","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminOverallSummary.js",["437","438","439","440","441"],"import React from 'react'\nimport HikingIcon from '@mui/icons-material/Hiking';\nimport AccessAlarmIcon from '@mui/icons-material/AccessAlarm';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsBikeIcon from '@mui/icons-material/DirectionsBike';\nimport {Grid, Typography,Paper,Box} from '@mui/material'\nimport { styled } from '@mui/material/styles';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\nconst GarminOverallSummary = (props) => {\n    const stepsDesc = \"Steps Count\";\n    const intensityDesc = \"Intensity Minutes\";\n    const activitiesDesc = \"Activities & Energy\";\n    const heartrateDesc = \"Heart Rate\"\n    const stepFirstText = \"Average Daily Steps Count: \" + props.avgSteps + \" steps\";\n    const stepSecondText = \"Evaluation Category: \" + props.avgStepsCategory;\n    const intensityFirstText = \"Average Daily Intensity Duration: \" + props.avgTime + \" mins\";\n    const intensitySecondText = \"Evaluation Category: \" + props.avgTimeCategory;\n    const activityFirstText = \"Average Daily Activity Duration: \" + props.avgDuration + \" mins\";\n    const activitySecondText = \"Average Daily Energy Consumed: \" + props.avgEnergy + \" kcal\";\n    const heartFirstText = \"Average Daily Resting HR: \" + props.avgRestHR + \" bpm\";\n    const heartSecondText = \"Average Daily High HR: \" + props.avgHighHR + \" bpm\";\n    const name = props.name;\n    return (\n        <div>\n            <div className='title'>\n                <h1>Garmin Daily Averages</h1>\n            </div>\n            <Box sx={{ width: '100%' }}>\n                <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                    <Grid className=\"category\" item xs={6}>\n                        <div className=\"steps\">\n                            <div className='cate_header'>\n                                <HikingIcon />\n                                <h3>{stepsDesc}</h3>\n                            </div>\n                            <div className='content'>\n                                <p>{stepFirstText}</p>\n                                <p>{stepSecondText}</p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid className=\"category\" item xs={6}>\n                        <div className=\"intensity\">\n                            <div className='cate_header'>\n                                <AccessAlarmIcon />\n                                <h3>{intensityDesc}</h3>\n                            </div>\n                            <div className='content'>\n                                <p>{intensityFirstText}</p>\n                                <p>{intensitySecondText}</p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid className=\"category\" item xs={6}>\n                        <div className=\"activity\">\n                            <div className='cate_header'>\n                                <DirectionsBikeIcon />\n                                <h3>{activitiesDesc}</h3>\n                            </div>\n                            <div className='content'>\n                                <p>{activityFirstText}</p>\n                                <p>{activitySecondText}</p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid className=\"category\" item xs={6}>\n                        <div className=\"heartrate\">\n                            <div className='cate_header'>\n                                <FavoriteIcon />\n                                <h3>{heartrateDesc}</h3>\n                            </div>\n                            <div className='content'>\n                                <p>{heartFirstText}</p>\n                                <p>{heartSecondText}</p>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Box>\n            \n        </div>\n    )\n}\n\nexport default GarminOverallSummary","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminStepsGrid.js",["442","443","444","445","446"],"import React from 'react'\nimport {Grid, Typography,Paper,Box} from '@mui/material'\nimport { styled } from '@mui/material/styles';\n\nconst HeaderItem = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    fontWeight:'bold'\n  }));\n  const DataItem = styled(Paper)(({ theme }) => ({\n      backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      ...theme.typography.body2,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      fontWeight:'normal'\n    }));\n\nconst GarminStepsGrid = (props) => {\n    const totalSteps = props.data.map(row => parseInt(row.stepsCount)).reduce((partialSum, a) => partialSum + a, 0);\n    const totalDistance = parseInt((props.data.map(row => parseInt(row.distance)).reduce((partialSum, a) => partialSum + a, 0)/1000));\n    const avgSteps = parseInt((totalSteps/props.data.length));\n    \n    if (props.data.isNot7d == true){\n        const stepsWeekly = []\n        for (let i=0;i<props.data.length;i+=7){\n            if ((i+7) > props.data.length){\n                break\n            }\n            stepsWeekly.push(props.data.slice(i,i+7).map(row => parseInt(row.stepsCount)).reduce((partialSum,a) => partialSum+a,0));\n        }\n        const avgWeeklySteps = parseInt(stepsWeekly.reduce((partialSum,a) => partialSum+a,0)/stepsWeekly.length);\n    }\n    return (\n        <div>\n            <Box sx={{ width: '100%' }}>\n                <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                    <Grid item xs={6}>\n                        <HeaderItem>Total Steps</HeaderItem>\n                        <DataItem>{totalSteps} Steps</DataItem>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <HeaderItem>Total Distance</HeaderItem>\n                        <DataItem>{totalDistance} KM</DataItem>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <HeaderItem>Avg Daily Steps</HeaderItem>\n                        <DataItem>{avgSteps} Steps</DataItem>\n                    </Grid>\n                    {props.data.isNot7d &&\n                        <Grid item xs={6}>\n                            <HeaderItem>Avg Weekly</HeaderItem>\n                            <DataItem>{avgWeeklySteps} Steps</DataItem>\n                        </Grid>\n                    }\n                </Grid>\n            </Box>\n        </div>\n    )\n}\n\nexport default GarminStepsGrid","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/GarminSummary.js",["447","448","449","450","451","452","453","454"],"import React, {useState} from 'react'\nimport Collapsible from '../Collapsible';\n\nimport Steps from 'src/components/GarminDetails/Steps';\nimport Intensity from 'src/components/GarminDetails/Intensity';\nimport Heartrate from 'src/components/GarminDetails/Heartrate';\nimport Activities from 'src/components/GarminDetails/Activities';\n\n\nconst GarminSummary = (props) => {\n    const [stepPeriod,setStepPeriod] = useState('4w');\n    const [intensityPeriod, setIntensityPeriod] = useState('4w');\n    const [activityPeriod, setActivityPeriod] = useState('4w');\n    const [hrPeriod, setHrPeriod] = useState('4w');\n\n    const changeStepState = (state) => {\n        setStepPeriod(state);\n    }\n    const changeIntensityState = (state) => {\n        setIntensityPeriod(state);\n    }\n    const changeActivityState = (state) => {\n        setActivityPeriod(state);\n    }\n    const changehrState = (state) => {\n        setHrPeriod(state);\n    }\n   \n    return (\n        <div>\n            <div>\n                <Collapsible label=\"Steps Summary\" color=\"#0FB4E4\" >\n                    <Steps data={props.data} changeState={changeStepState}/>\n                </Collapsible>\n            </div>\n            <div>\n                <Collapsible label=\"Intensity Summary\" color=\"#00A36C\" > \n                    <Intensity data={props.data} color={'#00A36C'} changeState={changeIntensityState}/>\n                </Collapsible>\n            </div>\n            <div>\n                <Collapsible label=\"Heart Rate Summary\" color=\"#D22B2B\" >\n                    <Heartrate data={props.data} changeState={changehrState}/>\n                </Collapsible>\n            </div>\n            <div>\n                <Collapsible label=\"Activities Summary\" color=\"#E49B0F\" >\n                    <Activities data={props.data} changeState={changeActivityState}/>\n                </Collapsible>\n            </div>\n        </div>\n    )\n}\n\nexport default GarminSummary","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/General.js",["455","456"],"import React from 'react';\nimport Collapsible from '../Collapsible';\nimport { Radarchart } from '../charts/Radarchart';\n\nconst General = (props) => {\n  return (\n    \n    <div>\n                <div className=\"detail_row\" style={{display:'flex', justifyContent:'space-around', marginBottom:'40px'}}>\n                    <div className=\"summary\">\n                        <Collapsible label=\"Summary\">\n                            <div>\n                                <h3>General Info Chart</h3>\n                                <Radarchart series={props.series} options={props.options} />\n                            </div>\n                        </Collapsible>\n                    </div>\n                </div>\n    </div>\n  )\n}\n\nexport default General","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Lightbuzz.js",["457"],"import React from 'react';\nimport Collapsible from '../Collapsible'\n\n\nconst Lightbuzz = (props) => {\n  return (\n\n    <div>\n    \n                <div className=\"detail_row\" style={{display:'flex', justifyContent:'space-around', marginBottom:'40px'}}>\n                    <div className=\"sit_to_stand\">\n                        <Collapsible label=\"Sit To Stand\">\n                            <div>\n                                <h3>Sit to Stand</h3>          \n                                {props.isSittoStand ? \n                                (<h1>Some data</h1>) :\n                                (<h1>no data</h1>)}\n                            </div>\n                        </Collapsible>\n                    </div>\n                </div>\n    </div>\n  )\n}\n\nexport default Lightbuzz","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/RXFood.js",["458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import React, {useState,useEffect} from 'react'\nimport Collapsible from '../Collapsible'\nimport { Piechart } from '../charts/Piechart'\nimport { HorizontalBarChart } from '../charts/HorizontalBarChart';\nimport PageDataTable from './PageDataTable';\nimport RXFoodSummary from './RXFoodSummary';\n\n\n\nconst getValues = (obj,multiply) => {\n    if (multiply==true){\n        var value = Object.values(obj[0]).map(i => (Number(i)*100));\n        value.shift()\n        return value\n    }else{\n        var value = Object.values(obj[0]);\n        value.shift()\n        return value\n    }  \n};\n\n\nconst getDataBySession = (session_id,rawData) => {\n    var validData = [];\n    for (let i=0;i<rawData.length;i++){\n        if (rawData[i].session_id == session_id){\n            validData.push(rawData[i])\n        }\n    }\n    return validData;\n};\n\nconst RXFood = (props) => {\n    const [date,setDate] = useState(props.datePeriods[0].date_since.slice(0,10)+' to '+props.datePeriods[0].date_until.slice(0,10))\n    const [sessionID, setSessionID] = useState('1')\n\n    const getDateHandler = (selectedDate) =>{\n        setDate(selectedDate);\n    }\n    \n    useEffect(() => {\n        if (date!=undefined){\n            const startDate = date.split(\"to\")[0].slice(0,10);\n            for (let i=0;i<props.datePeriods.length;i++){\n                const tempDate = props.datePeriods[i].date_since.slice(0,10)\n                if (tempDate == startDate){\n                    const session_id = props.datePeriods[i].session_id;\n                    setSessionID(session_id);\n                    console.log(sessionID)\n                    break\n                }\n            }   \n        }\n    }, [date])\n\n    const name = props.firstName + ' ' + props.lastName;\n    const datePeriods = props.datePeriods;\n    const avgcal = getValues(getDataBySession(sessionID,props.avgcal),false);\n    const avgCarbo = getValues(getDataBySession(sessionID,props.avgCarbo),false);\n    const avgProtein = parseInt(getValues(getDataBySession(sessionID,props.proteinAvg),false));\n    const numDays = getValues(getDataBySession(sessionID,props.nDays),false);\n    const macroLabels = ['Fat','Carbohydrates','Protein'];\n    const macroTempSeries = getValues(getDataBySession(sessionID,props.macroSeries),false);\n    const fatTotalPct = macroTempSeries[0]+macroTempSeries[1];\n    const macroSeries = macroTempSeries.slice(2);\n    macroSeries.unshift(fatTotalPct);\n    const calLabels = ['Morning','Lunchtime','Afternoon','Dinner','Evening'];\n    const calSeries = getValues(getDataBySession(sessionID,props.calSeries),false);\n    const breakfastLabels = ['Protein','Fruits','Vegetables','Grains'];\n    const breakfastSeries = getValues(getDataBySession(sessionID,props.avgBreakfastSeries),true);\n    const lunchLabels = ['Protein','Fruits','Vegetables','Grains'];\n    const lunchSeries = getValues(getDataBySession(sessionID,props.avgLunchSeries),true);\n    const dinnerLabels = ['Protein','Fruits','Vegetables','Grains'];\n    const dinnerSeries = getValues(getDataBySession(sessionID,props.avgDinnerSeries),true);\n    const avgGrainLabels = ['Whole Grains','Refined Grains']\n    const avgGrainSeries = getValues(getDataBySession(sessionID,props.avgGrainSeries),false);\n    const carbLabels = ['Morning','Lunchtime','Afternoon','Dinner','Evening'];\n    const carbSeries = getValues(getDataBySession(sessionID,props.carbSeries),false);\n    const proteinLabels = ['Red Meat','Poultry','Seafood','Plant Protein','Dairy and Egg']\n    const proteinSeries = getValues(getDataBySession(sessionID,props.proteinSeries),false);\n    const fatLabels = ['Healthy Fats','Unhealthy Fats']\n    const fatSeries = getValues(getDataBySession(sessionID,props.fatSeries),false);\n    const avgFat = parseInt(((((macroSeries[0] + macroSeries[1])*0.01)*avgcal)/9));\n    const mealsCount = getDataBySession(sessionID,props.mealsCount)[0];\n    console.log(mealsCount)\n    const itemCount = getDataBySession(sessionID,props.itemCount)[0].n_meals_items;\n\n    const micro_data_cols = [\n        {name:'Nutrient', selector:row=>row.nutrient, sortable:true, right:true},\n        {name:'Avg Daily Intake', selector:row=>row.avg_daily_intake, sortable:true, right:true},\n        {name:'Min Daily Intake', selector:row=>row.min_daily_intake, sortable:true, right:true},\n        {name:'Max Daily Intake', selector:row=>row.max_daily_intake, sortable:true, right:true},\n        {name:'Per Thousand Kcal', selector:row=>row.per_thousand_kcal, sortable:true, right:true},\n    ]\n\n    const micro_data_rows = getDataBySession(sessionID,props.micronutrients);\n    let sodium, calcium, iron, potassium, fibre;\n\n    const macroMinMax = micro_data_rows.slice(0,3);\n    for (let i=0;i<micro_data_rows.length;i++){\n        for (let x in micro_data_rows[i]){\n            if (typeof micro_data_rows[i][x] == 'number'){\n                micro_data_rows[i][x] = micro_data_rows[i][x].toFixed(2)\n            }\n            if (x == 'nutrient'){\n                micro_data_rows[i][x] = micro_data_rows[i][x].charAt(0).toUpperCase()+micro_data_rows[i][x].slice(1);\n                if (micro_data_rows[i][x].includes('Vitamin')){\n                    console.log(micro_data_rows[i][x].charAt(8))\n                    micro_data_rows[i][x] = micro_data_rows[i][x].slice(0,8) +micro_data_rows[i][x].charAt(8).toUpperCase() + micro_data_rows[i][x].slice(9);\n                }\n            }\n            if (x == 'unit'){\n                if (micro_data_rows[i]['nutrient'].includes('(') == false){\n                    micro_data_rows[i]['nutrient'] = micro_data_rows[i]['nutrient']+' ('+micro_data_rows[i]['unit']+')'\n                }\n                \n            }\n        }\n    }\n    \n    for (let i=0;i<micro_data_rows.length;i++){\n        if (micro_data_rows[i]['nutrient'].includes('Fiber')){\n            fibre = micro_data_rows[i].avg_daily_intake;\n            fibre = parseFloat(fibre).toFixed(0)\n        };\n        if (micro_data_rows[i]['nutrient'].includes('Sodium')){\n            sodium = micro_data_rows[i].avg_daily_intake;\n        };\n        if (micro_data_rows[i]['nutrient'].includes('Calcium')){\n            calcium = micro_data_rows[i].avg_daily_intake;\n        };\n        if (micro_data_rows[i]['nutrient'].includes('Iron')){\n            iron = micro_data_rows[i].avg_daily_intake;\n        };\n        if (micro_data_rows[i]['nutrient'].includes('Potassium')){\n            potassium = micro_data_rows[i].avg_daily_intake;\n        };\n    };\n\n\n    micro_data_rows = micro_data_rows.filter(row => {\n        if (row.nutrient.includes('Protein') || row.nutrient.includes('Carbohydrate') || row.nutrient.includes('Fiber')){\n            return false\n        }\n        return true\n    })\n\n\n    return (\n\n        <div>\n            <RXFoodSummary name={name} calories={avgcal} avgCarbohydrates={avgCarbo} avgProtein={avgProtein} avgFat={avgFat} mealsCount={mealsCount} session={sessionID}\n            avgSodium={sodium} avgCalcium={calcium} avgIron={iron} avgPotassium={potassium} avgFibre={fibre} carboPct={macroSeries[1]} macroMinMax={macroMinMax}\n            proteinPct={macroSeries[2]} fatPct={macroSeries[0]} date={date} itemCount={itemCount} numDays={numDays} getDate={getDateHandler} datePeriods={datePeriods}/>\n            <div className=\"calories\" style={{marginTop:'2rem'}}>\n                <Collapsible label=\"Calories\" color=\"#0FB4E4\" >\n                    <div className=\"calorie_row item_row\">\n                        <div className=\"desc\">\n                            <h2>Calorie Summary</h2>\n                            <p>{name} consumed an average of {avgcal} kcal/day</p>\n                        </div>\n                        <div className=\"macro_dist\">\n                            <h3>Macronutrient Distribution Chart</h3>\n                            <Piechart series={macroSeries} labels={macroLabels} />\n                        </div>\n                        <div className=\"calorie_dist\">\n                            <h3>Calorie Distribution Throughout the Day (kcal)</h3>\n                            <HorizontalBarChart series={calSeries} categories={calLabels} />\n                        </div>\n                    </div>\n                    <div className=\"avg_plate_row item_row\">\n                        <div className=\"desc\">\n                            <h2>Average Plate Summary</h2>\n                            <p>This section summarizes the average food group distribution for {name} across breakfast,lunch, and dinner</p>\n                            \n                        </div>\n                        <div className=\"avg_plate\">\n                            <h3 className=\"avg_text\">Average Plate Breakfast</h3>\n                            <Piechart series={breakfastSeries} labels={breakfastLabels} />\n                        </div>\n                        <div className=\"avg_plate\">\n                            <h3 className=\"avg_text\">Average Plate Lunch</h3>\n                            <Piechart series={lunchSeries} labels={lunchLabels} />\n                        </div>\n                        <div className=\"avg_plate\">\n                            <h3 className=\"avg_text\">Average Plate Dinner</h3>\n                            <Piechart series={dinnerSeries} labels={dinnerLabels} />\n                        </div>\n                    </div>\n                </Collapsible>\n            </div>\n            <div className=\"carbohydrates\">\n                <Collapsible label=\"Carbohydrates\" color=\"#00A36C\">\n                <div className=\"carboRow item_row\">\n                    <div className=\"desc\">\n                        <h2>Carbohydrates Summary</h2>\n                        <p>{name} consumed an average of {avgCarbo} g/day (Min: {parseInt(macroMinMax[1].min_daily_intake)}g, Max: {parseInt(macroMinMax[1].max_daily_intake)})</p>\n                        <p>{name} consumed an average of {fibre} g fibre/day (Min: {parseInt(macroMinMax[2].min_daily_intake)}g, Max: {parseInt(macroMinMax[2].max_daily_intake)})</p>\n                    </div>\n                    <div className=\"avg_grain_freq\">\n                        <h3>Intake of Whole vs. Refined Grains (%)</h3>\n                        <Piechart series={avgGrainSeries} labels={avgGrainLabels} />\n                    </div>\n                    <div className=\"grain_dist\">\n                        <h3>Distribution of Carbohydrates throughout the Day (grams)</h3>\n                        <HorizontalBarChart series={carbSeries} categories={carbLabels}/>\n                    </div>\n\n                </div>\n                </Collapsible>\n            </div>\n            <div className=\"protein\">\n                <Collapsible label=\"Protein\" color=\"#D22B2B\">\n                    <div className=\"protein_row item_row\">\n                        <div className=\"desc\">\n                            <h2>Protein Summary</h2>\n                            <p>{name} consumed an average of {avgProtein} g/day (Min: {parseInt(macroMinMax[0].min_daily_intake)}g, Max: {parseInt(macroMinMax[0].max_daily_intake)})</p>   \n                        </div>\n                        <div className=\"protein_freq\">\n                            <h3>Distribution of Protein Intake (%)</h3>\n                            <Piechart series={proteinSeries} labels={proteinLabels} />\n                        </div>\n                    </div>\n                </Collapsible>\n            </div>\n            <div className=\"fat\">\n                <Collapsible label=\"Fat\" color=\"#E49B0F\" >\n                    <div className=\"fat_row item_row\">\n                        <div className=\"desc\">\n                            <h2>Fat Summary</h2>\n                            <p>{name} consumed an average of {avgFat} g/day</p>\n                            <p>{(fatSeries[0]).toFixed(1)}% came from unsaturated fats and {(fatSeries[1]).toFixed(1)}% came from saturated fats</p>\n                        </div>\n                        <div className=\"fat_freq\">\n                            <h3>Intake of Healthy vs. Unhealthy Fats (%)</h3>\n                            <Piechart series={fatSeries} labels={fatLabels} />\n                        </div>\n                    </div>\n                </Collapsible>\n            </div>\n            <div className=\"micronutrients\">\n                <Collapsible label=\"Micronutrients\" color=\"#36454F\">\n                    <div className=\"micronutrients_row\">\n                        <PageDataTable cols={micro_data_cols} data={micro_data_rows} pagination={false} \n                        placeHolderText={'nutrient'} filterCol={'nutrient'} title={'Micronutrients List'}/>\n                    </div>\n                </Collapsible>\n            </div>\n        </div>\n    )\n}\n\nexport default RXFood","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/RXFoodSummary.js",["479","480","481"],"import React from 'react'\nimport DateFilter from './DateFilter'\n\n\nconst RXFoodSummary = (props) => {\n    return (\n        <div style={{marginTop:'3rem', marginBottom:'3rem', display:'flex',justifyContent:'space-around'}}>\n            <div className=\"dateSelect\">\n                <h1 style={{marginBottom:'1rem'}}>Nutrition Summary for {props.name}</h1>\n                <h3>Meals Report</h3>\n                <div style={{display:'flex', marginBottom:'2rem'}}>\n                    <ul>\n                        <li style={{marginRight:'3rem'}}><b>breakfast:</b> {parseInt(props.mealsCount.breakfast)*props.numDays[0]}</li>\n                        <li><b>Dinner: </b>{parseInt(props.mealsCount.dinner)*props.numDays[0]}</li>\n                    </ul>\n                    <ul>\n                        <li style={{marginRight:'3rem'}}><b>Lunch:</b> {parseInt(props.mealsCount.lunch)*props.numDays[0]}</li>\n                        <li><b>Snacks:</b> {parseInt(props.mealsCount.snack)*props.numDays[0]}</li>\n                    </ul> \n                </div>\n                <DateFilter getDate={props.getDate} datePeriods={props.datePeriods} />\n            </div>\n            <div>\n                <h1 style={{textAlign:'center'}}>Daily Averages for Session {props.session}</h1>\n                <div className='nutrients' style={{display:'flex',justifyContent:'space-around'}}>\n                    <div className=\"macronutrients\" style={{marginRight:'4rem'}}>\n                        <h2>Macronutrients</h2>\n                        <ul className=\"macronutrients\">\n                            <li><b>Calories:</b> {props.calories} KCAL</li>\n                            <li><b>Carbohydrates:</b> {props.avgCarbohydrates} grams ({props.carboPct}% of total calories)</li>\n                            <li><b>Fibre: </b>{props.avgFibre} grams of fibre</li>\n                            <li><b>Protein:</b> {props.avgProtein} grams ({props.proteinPct}% of total calories)</li>\n                            <li><b>Fat:</b> {props.avgFat} grams ({props.fatPct}% of total calories)</li>\n                        </ul> \n                    </div>\n                    <div className=\"micronutrients\">\n                        <h2>Micronutrients</h2>\n                        <ul className=\"micronutrients\">\n                            <li><b>Sodium:</b> {parseInt(props.avgSodium).toFixed(0)} mg</li>\n                            <li><b>Calcium:</b> {parseInt(props.avgCalcium).toFixed(0)} mg</li>\n                            <li><b>Iron:</b> {parseInt(props.avgIron).toFixed(0)} g</li>\n                            <li><b>Potassium:</b> {parseInt(props.avgPotassium).toFixed(0)} mg</li>\n                        </ul>  \n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport default RXFoodSummary","/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/Survey.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/patientDetailsFunc.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/budget.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/latest-orders.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/latest-products.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/sales.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/tasks-progress.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/total-customers.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/total-profit.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard/traffic-by-device.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard-layout.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard-navbar.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/dashboard-sidebar.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/landing/LandingPage.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/landing/Showcase.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/logo.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/nav-item.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/product/product-card.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/product/product-list-toolbar.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/settings/settings-notifications.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/settings/settings-password.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/severity-pill.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/PatientsTable.js",[],"/Users/aeronchen/Desktop/intern_may/admin_dashboard_deploy/client/src/components/customer/details/PageDataTable.js",["482","483","484"],"import React, { useState, useMemo } from 'react';\nimport DataTable from 'react-data-table-component';\nimport styled from 'styled-components';\nimport Button from './Button';\n\n\n\nconst TextField = styled.input`\n\theight: 32px;\n\twidth: 200px;\n\tborder-radius: 3px;\n\tborder-top-left-radius: 5px;\n\tborder-bottom-left-radius: 5px;\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n\tborder: 1px solid #e5e5e5;\n\tpadding: 0 32px 0 16px;\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst ClearButton = styled(Button)`\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n\tborder-top-right-radius: 5px;\n\tborder-bottom-right-radius: 5px;\n\theight: 34px;\n\twidth: 32px;\n\ttext-align: center;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\n\nconst FilterComponent = ({ filterText, onFilter, onClear, placeHolderText}) => {\n\tconst holderText = 'Filter by '+placeHolderText;\n\treturn(\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tid=\"search\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder={holderText}\n\t\t\t\taria-label=\"Search Input\"\n\t\t\t\tvalue={filterText}\n\t\t\t\tonChange={onFilter}\n\t\t\t/>\n\t\t\t<ClearButton type=\"button\" onClick={onClear}>\n\t\t\t\tX\n\t\t\t</ClearButton>\n\t\t</>\n\t)\n};\nconst PageDataTable = (props) => {\n    const columns = props.cols;\n    const data = props.data;\n\tconst check = props.pagination;\n\tconst filterCol = props.filterCol;\n\tconst placeHolderText = props.placeHolderText;\n    const [filterText, setFilterText] = useState('');\n\tconst [resetPaginationToggle, setResetPaginationToggle] = useState(false);\n\tconst filteredItems = data.filter(\n\t\titem => item[filterCol] && item[filterCol].toLowerCase().includes(filterText.toLowerCase()),\n\t);\n\tconst subHeaderComponentMemo = useMemo(() => {\n\t\tconst handleClear = () => {\n\t\t\tif (filterText) {\n\t\t\t\tsetResetPaginationToggle(!resetPaginationToggle);\n\t\t\t\tsetFilterText('');\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} placeHolderText={placeHolderText}/>\n\t\t);\n\t}, [filterText, resetPaginationToggle]);\n    \n    return (\n        <DataTable\n\t\t\ttitle={props.title}\n\t\t\tcolumns={columns}\n\t\t\tdata={filteredItems}\n\t\t\tpaginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\n\t\t\tsubHeader\n\t\t\tpagination={check}\n\t\t\tsubHeaderComponent={subHeaderComponentMemo}\n\t\t\tpersistTableHead\n\t\t/>\n  )\n}\n\nexport default PageDataTable",{"ruleId":"485","severity":1,"message":"486","line":71,"column":59,"nodeType":"487","messageId":"488","endLine":71,"endColumn":89,"fix":"489"},{"ruleId":"485","severity":1,"message":"486","line":72,"column":52,"nodeType":"487","messageId":"488","endLine":72,"endColumn":82,"fix":"490"},{"ruleId":"485","severity":1,"message":"491","line":73,"column":31,"nodeType":"487","messageId":"488","endLine":73,"endColumn":54,"fix":"492"},{"ruleId":"485","severity":1,"message":"493","line":74,"column":33,"nodeType":"487","messageId":"488","endLine":74,"endColumn":62,"fix":"494"},{"ruleId":"485","severity":1,"message":"495","line":75,"column":49,"nodeType":"487","messageId":"488","endLine":75,"endColumn":87,"fix":"496"},{"ruleId":"485","severity":1,"message":"497","line":76,"column":37,"nodeType":"487","messageId":"488","endLine":76,"endColumn":61,"fix":"498"},{"ruleId":"485","severity":1,"message":"499","line":77,"column":41,"nodeType":"487","messageId":"488","endLine":77,"endColumn":69,"fix":"500"},{"ruleId":"485","severity":1,"message":"501","line":78,"column":37,"nodeType":"487","messageId":"488","endLine":78,"endColumn":68,"fix":"502"},{"ruleId":"485","severity":1,"message":"486","line":90,"column":59,"nodeType":"487","messageId":"488","endLine":90,"endColumn":89,"fix":"503"},{"ruleId":"485","severity":1,"message":"504","line":91,"column":47,"nodeType":"487","messageId":"488","endLine":91,"endColumn":64,"fix":"505"},{"ruleId":"485","severity":1,"message":"486","line":35,"column":50,"nodeType":"487","messageId":"488","endLine":35,"endColumn":69,"fix":"506"},{"ruleId":"485","severity":1,"message":"507","line":36,"column":50,"nodeType":"487","messageId":"488","endLine":36,"endColumn":79,"fix":"508"},{"ruleId":"485","severity":1,"message":"509","line":48,"column":61,"nodeType":"487","messageId":"488","endLine":48,"endColumn":78,"fix":"510"},{"ruleId":"485","severity":1,"message":"504","line":51,"column":53,"nodeType":"487","messageId":"488","endLine":51,"endColumn":67,"fix":"511"},{"ruleId":"485","severity":1,"message":"512","line":52,"column":50,"nodeType":"487","messageId":"488","endLine":52,"endColumn":68,"fix":"513"},{"ruleId":"485","severity":1,"message":"509","line":37,"column":61,"nodeType":"487","messageId":"488","endLine":37,"endColumn":79,"fix":"514"},{"ruleId":"485","severity":1,"message":"509","line":41,"column":61,"nodeType":"487","messageId":"488","endLine":41,"endColumn":79,"fix":"515"},{"ruleId":"485","severity":1,"message":"516","line":47,"column":46,"nodeType":"487","messageId":"488","endLine":47,"endColumn":55,"fix":"517"},{"ruleId":"485","severity":1,"message":"516","line":50,"column":53,"nodeType":"487","messageId":"488","endLine":50,"endColumn":62,"fix":"518"},{"ruleId":"485","severity":1,"message":"509","line":41,"column":61,"nodeType":"487","messageId":"488","endLine":41,"endColumn":75,"fix":"519"},{"ruleId":"485","severity":1,"message":"520","line":47,"column":47,"nodeType":"487","messageId":"488","endLine":47,"endColumn":64,"fix":"521"},{"ruleId":"485","severity":1,"message":"522","line":13,"column":36,"nodeType":"487","messageId":"488","endLine":13,"endColumn":53,"fix":"523"},{"ruleId":"485","severity":1,"message":"524","line":12,"column":40,"nodeType":"487","messageId":"488","endLine":12,"endColumn":71,"fix":"525"},{"ruleId":"485","severity":1,"message":"526","line":8,"column":42,"nodeType":"487","messageId":"488","endLine":8,"endColumn":85,"fix":"527"},{"ruleId":"485","severity":1,"message":"526","line":7,"column":37,"nodeType":"487","messageId":"488","endLine":7,"endColumn":80,"fix":"528"},{"ruleId":"529","severity":1,"message":"530","line":16,"column":42,"nodeType":"531","endLine":16,"endColumn":44,"suggestions":"532"},{"ruleId":"485","severity":1,"message":"524","line":69,"column":37,"nodeType":"487","messageId":"488","endLine":69,"endColumn":80,"fix":"533"},{"ruleId":"485","severity":1,"message":"534","line":70,"column":53,"nodeType":"487","messageId":"488","endLine":70,"endColumn":80,"fix":"535"},{"ruleId":"485","severity":1,"message":"536","line":81,"column":60,"nodeType":"537","messageId":"488","endLine":81,"endColumn":94,"fix":"538"},{"ruleId":"485","severity":1,"message":"539","line":88,"column":45,"nodeType":"487","messageId":"488","endLine":88,"endColumn":55,"fix":"540"},{"ruleId":"485","severity":1,"message":"541","line":91,"column":40,"nodeType":"537","messageId":"488","endLine":91,"endColumn":78,"fix":"542"},{"ruleId":"485","severity":1,"message":"543","line":94,"column":61,"nodeType":"537","messageId":"488","endLine":94,"endColumn":118,"fix":"544"},{"ruleId":"485","severity":1,"message":"545","line":110,"column":53,"nodeType":"537","messageId":"488","endLine":110,"endColumn":75,"fix":"546"},{"ruleId":"485","severity":1,"message":"547","line":112,"column":73,"nodeType":"537","messageId":"488","endLine":112,"endColumn":97,"fix":"548"},{"ruleId":"485","severity":1,"message":"549","line":133,"column":46,"nodeType":"487","messageId":"488","endLine":133,"endColumn":74,"fix":"550"},{"ruleId":"485","severity":1,"message":"526","line":140,"column":46,"nodeType":"487","messageId":"488","endLine":140,"endColumn":97,"fix":"551"},{"ruleId":"485","severity":1,"message":"552","line":143,"column":56,"nodeType":"487","messageId":"488","endLine":143,"endColumn":72,"fix":"553"},{"ruleId":"485","severity":1,"message":"554","line":149,"column":57,"nodeType":"487","messageId":"488","endLine":149,"endColumn":84,"fix":"555"},{"ruleId":"485","severity":1,"message":"554","line":150,"column":60,"nodeType":"487","messageId":"488","endLine":150,"endColumn":87,"fix":"556"},{"ruleId":"485","severity":1,"message":"554","line":151,"column":56,"nodeType":"487","messageId":"488","endLine":151,"endColumn":79,"fix":"557"},{"ruleId":"485","severity":1,"message":"554","line":152,"column":67,"nodeType":"487","messageId":"488","endLine":152,"endColumn":90,"fix":"558"},{"ruleId":"485","severity":1,"message":"552","line":15,"column":53,"nodeType":"487","messageId":"488","endLine":15,"endColumn":66,"fix":"559"},{"ruleId":"485","severity":1,"message":"560","line":28,"column":47,"nodeType":"487","messageId":"488","endLine":28,"endColumn":62,"fix":"561"},{"ruleId":"562","severity":1,"message":"563","line":20,"column":1,"nodeType":"564","endLine":20,"endColumn":91},{"ruleId":"485","severity":1,"message":"552","line":20,"column":39,"nodeType":"487","messageId":"488","endLine":20,"endColumn":53,"fix":"565"},{"ruleId":"485","severity":1,"message":"566","line":22,"column":49,"nodeType":"487","messageId":"488","endLine":22,"endColumn":84,"fix":"567"},{"ruleId":"485","severity":1,"message":"568","line":23,"column":36,"nodeType":"487","messageId":"488","endLine":23,"endColumn":76,"fix":"569"},{"ruleId":"485","severity":1,"message":"570","line":24,"column":34,"nodeType":"487","messageId":"488","endLine":24,"endColumn":55,"fix":"571"},{"ruleId":"485","severity":1,"message":"572","line":35,"column":33,"nodeType":"487","messageId":"488","endLine":35,"endColumn":52,"fix":"573"},{"ruleId":"485","severity":1,"message":"574","line":36,"column":32,"nodeType":"487","messageId":"488","endLine":36,"endColumn":34,"fix":"575"},{"ruleId":"485","severity":1,"message":"576","line":37,"column":50,"nodeType":"487","messageId":"488","endLine":37,"endColumn":62,"fix":"577"},{"ruleId":"485","severity":1,"message":"576","line":45,"column":56,"nodeType":"487","messageId":"488","endLine":45,"endColumn":68,"fix":"578"},{"ruleId":"485","severity":1,"message":"576","line":48,"column":54,"nodeType":"487","messageId":"488","endLine":48,"endColumn":69,"fix":"579"},{"ruleId":"485","severity":1,"message":"576","line":51,"column":54,"nodeType":"487","messageId":"488","endLine":51,"endColumn":69,"fix":"580"},{"ruleId":"485","severity":1,"message":"581","line":25,"column":65,"nodeType":"487","messageId":"488","endLine":25,"endColumn":84,"fix":"582"},{"ruleId":"485","severity":1,"message":"583","line":26,"column":45,"nodeType":"487","messageId":"488","endLine":26,"endColumn":72,"fix":"584"},{"ruleId":"485","severity":1,"message":"572","line":67,"column":33,"nodeType":"487","messageId":"488","endLine":67,"endColumn":52,"fix":"585"},{"ruleId":"485","severity":1,"message":"524","line":68,"column":32,"nodeType":"487","messageId":"488","endLine":68,"endColumn":60,"fix":"586"},{"ruleId":"485","severity":1,"message":"574","line":71,"column":32,"nodeType":"487","messageId":"488","endLine":71,"endColumn":34,"fix":"587"},{"ruleId":"485","severity":1,"message":"576","line":72,"column":50,"nodeType":"487","messageId":"488","endLine":72,"endColumn":62,"fix":"588"},{"ruleId":"485","severity":1,"message":"576","line":80,"column":52,"nodeType":"487","messageId":"488","endLine":80,"endColumn":64,"fix":"589"},{"ruleId":"485","severity":1,"message":"576","line":83,"column":50,"nodeType":"487","messageId":"488","endLine":83,"endColumn":65,"fix":"590"},{"ruleId":"485","severity":1,"message":"576","line":86,"column":50,"nodeType":"487","messageId":"488","endLine":86,"endColumn":65,"fix":"591"},{"ruleId":"485","severity":1,"message":"592","line":29,"column":33,"nodeType":"487","messageId":"488","endLine":29,"endColumn":47,"fix":"593"},{"ruleId":"485","severity":1,"message":"574","line":30,"column":32,"nodeType":"487","messageId":"488","endLine":30,"endColumn":38,"fix":"594"},{"ruleId":"485","severity":1,"message":"574","line":34,"column":32,"nodeType":"487","messageId":"488","endLine":34,"endColumn":38,"fix":"595"},{"ruleId":"485","severity":1,"message":"524","line":27,"column":45,"nodeType":"487","messageId":"488","endLine":27,"endColumn":99,"fix":"596"},{"ruleId":"485","severity":1,"message":"597","line":35,"column":70,"nodeType":"487","messageId":"488","endLine":35,"endColumn":119,"fix":"598"},{"ruleId":"485","severity":1,"message":"592","line":38,"column":33,"nodeType":"487","messageId":"488","endLine":38,"endColumn":47,"fix":"599"},{"ruleId":"485","severity":1,"message":"574","line":39,"column":32,"nodeType":"487","messageId":"488","endLine":39,"endColumn":38,"fix":"600"},{"ruleId":"485","severity":1,"message":"574","line":43,"column":32,"nodeType":"487","messageId":"488","endLine":43,"endColumn":38,"fix":"601"},{"ruleId":"485","severity":1,"message":"524","line":34,"column":41,"nodeType":"487","messageId":"488","endLine":34,"endColumn":95,"fix":"602"},{"ruleId":"485","severity":1,"message":"597","line":42,"column":66,"nodeType":"487","messageId":"488","endLine":42,"endColumn":103,"fix":"603"},{"ruleId":"485","severity":1,"message":"604","line":33,"column":39,"nodeType":"487","messageId":"488","endLine":33,"endColumn":65,"fix":"605"},{"ruleId":"485","severity":1,"message":"606","line":35,"column":44,"nodeType":"487","messageId":"488","endLine":35,"endColumn":55,"fix":"607"},{"ruleId":"485","severity":1,"message":"592","line":38,"column":33,"nodeType":"487","messageId":"488","endLine":38,"endColumn":47,"fix":"608"},{"ruleId":"485","severity":1,"message":"609","line":39,"column":48,"nodeType":"487","messageId":"488","endLine":39,"endColumn":52,"fix":"610"},{"ruleId":"485","severity":1,"message":"609","line":51,"column":48,"nodeType":"487","messageId":"488","endLine":51,"endColumn":52,"fix":"611"},{"ruleId":"485","severity":1,"message":"609","line":63,"column":48,"nodeType":"487","messageId":"488","endLine":63,"endColumn":52,"fix":"612"},{"ruleId":"485","severity":1,"message":"609","line":75,"column":48,"nodeType":"487","messageId":"488","endLine":75,"endColumn":52,"fix":"613"},{"ruleId":"485","severity":1,"message":"592","line":40,"column":33,"nodeType":"487","messageId":"488","endLine":40,"endColumn":47,"fix":"614"},{"ruleId":"485","severity":1,"message":"574","line":41,"column":32,"nodeType":"487","messageId":"488","endLine":41,"endColumn":38,"fix":"615"},{"ruleId":"485","severity":1,"message":"574","line":45,"column":32,"nodeType":"487","messageId":"488","endLine":45,"endColumn":38,"fix":"616"},{"ruleId":"485","severity":1,"message":"574","line":49,"column":32,"nodeType":"487","messageId":"488","endLine":49,"endColumn":38,"fix":"617"},{"ruleId":"485","severity":1,"message":"574","line":54,"column":36,"nodeType":"487","messageId":"488","endLine":54,"endColumn":42,"fix":"618"},{"ruleId":"485","severity":1,"message":"520","line":32,"column":52,"nodeType":"487","messageId":"488","endLine":32,"endColumn":67,"fix":"619"},{"ruleId":"485","severity":1,"message":"620","line":33,"column":46,"nodeType":"487","messageId":"488","endLine":33,"endColumn":75,"fix":"621"},{"ruleId":"485","severity":1,"message":"520","line":37,"column":56,"nodeType":"487","messageId":"488","endLine":37,"endColumn":71,"fix":"622"},{"ruleId":"485","severity":1,"message":"520","line":38,"column":50,"nodeType":"487","messageId":"488","endLine":38,"endColumn":67,"fix":"623"},{"ruleId":"485","severity":1,"message":"520","line":42,"column":57,"nodeType":"487","messageId":"488","endLine":42,"endColumn":72,"fix":"624"},{"ruleId":"485","severity":1,"message":"620","line":43,"column":50,"nodeType":"487","messageId":"488","endLine":43,"endColumn":77,"fix":"625"},{"ruleId":"485","severity":1,"message":"520","line":47,"column":57,"nodeType":"487","messageId":"488","endLine":47,"endColumn":72,"fix":"626"},{"ruleId":"485","severity":1,"message":"620","line":48,"column":51,"nodeType":"487","messageId":"488","endLine":48,"endColumn":84,"fix":"627"},{"ruleId":"485","severity":1,"message":"524","line":9,"column":45,"nodeType":"487","messageId":"488","endLine":9,"endColumn":121,"fix":"628"},{"ruleId":"485","severity":1,"message":"507","line":14,"column":67,"nodeType":"487","messageId":"488","endLine":14,"endColumn":90,"fix":"629"},{"ruleId":"485","severity":1,"message":"524","line":10,"column":45,"nodeType":"487","messageId":"488","endLine":10,"endColumn":121,"fix":"630"},{"ruleId":"529","severity":1,"message":"631","line":54,"column":8,"nodeType":"531","endLine":54,"endColumn":14,"suggestions":"632"},{"ruleId":"485","severity":1,"message":"633","line":152,"column":40,"nodeType":"487","messageId":"488","endLine":152,"endColumn":57,"fix":"634"},{"ruleId":"485","severity":1,"message":"635","line":153,"column":32,"nodeType":"487","messageId":"488","endLine":153,"endColumn":52,"fix":"636"},{"ruleId":"485","severity":1,"message":"637","line":154,"column":41,"nodeType":"487","messageId":"488","endLine":154,"endColumn":64,"fix":"638"},{"ruleId":"485","severity":1,"message":"524","line":155,"column":39,"nodeType":"487","messageId":"488","endLine":155,"endColumn":65,"fix":"639"},{"ruleId":"485","severity":1,"message":"520","line":156,"column":47,"nodeType":"487","messageId":"488","endLine":156,"endColumn":62,"fix":"640"},{"ruleId":"485","severity":1,"message":"641","line":164,"column":60,"nodeType":"487","messageId":"488","endLine":164,"endColumn":80,"fix":"642"},{"ruleId":"485","severity":1,"message":"643","line":168,"column":68,"nodeType":"487","messageId":"488","endLine":168,"endColumn":90,"fix":"644"},{"ruleId":"485","severity":1,"message":"641","line":179,"column":64,"nodeType":"487","messageId":"488","endLine":179,"endColumn":88,"fix":"645"},{"ruleId":"485","severity":1,"message":"641","line":183,"column":60,"nodeType":"487","messageId":"488","endLine":183,"endColumn":80,"fix":"646"},{"ruleId":"485","severity":1,"message":"641","line":187,"column":61,"nodeType":"487","messageId":"488","endLine":187,"endColumn":82,"fix":"647"},{"ruleId":"485","severity":1,"message":"520","line":193,"column":52,"nodeType":"487","messageId":"488","endLine":193,"endColumn":67,"fix":"648"},{"ruleId":"485","severity":1,"message":"641","line":202,"column":59,"nodeType":"487","messageId":"488","endLine":202,"endColumn":82,"fix":"649"},{"ruleId":"485","severity":1,"message":"643","line":206,"column":65,"nodeType":"487","messageId":"488","endLine":206,"endColumn":88,"fix":"650"},{"ruleId":"485","severity":1,"message":"520","line":213,"column":46,"nodeType":"487","messageId":"488","endLine":213,"endColumn":61,"fix":"651"},{"ruleId":"485","severity":1,"message":"641","line":221,"column":62,"nodeType":"487","messageId":"488","endLine":221,"endColumn":84,"fix":"652"},{"ruleId":"485","severity":1,"message":"520","line":227,"column":42,"nodeType":"487","messageId":"488","endLine":227,"endColumn":57,"fix":"653"},{"ruleId":"485","severity":1,"message":"641","line":236,"column":58,"nodeType":"487","messageId":"488","endLine":236,"endColumn":76,"fix":"654"},{"ruleId":"485","severity":1,"message":"520","line":242,"column":53,"nodeType":"487","messageId":"488","endLine":242,"endColumn":68,"fix":"655"},{"ruleId":"485","severity":1,"message":"504","line":244,"column":63,"nodeType":"487","messageId":"488","endLine":244,"endColumn":85,"fix":"656"},{"ruleId":"485","severity":1,"message":"512","line":245,"column":54,"nodeType":"487","messageId":"488","endLine":245,"endColumn":76,"fix":"657"},{"ruleId":"485","severity":1,"message":"658","line":21,"column":53,"nodeType":"487","messageId":"488","endLine":21,"endColumn":84,"fix":"659"},{"ruleId":"485","severity":1,"message":"524","line":25,"column":44,"nodeType":"487","messageId":"488","endLine":25,"endColumn":98,"fix":"660"},{"ruleId":"485","severity":1,"message":"524","line":26,"column":53,"nodeType":"487","messageId":"488","endLine":26,"endColumn":81,"fix":"661"},{"ruleId":"485","severity":1,"message":"662","line":50,"column":31,"nodeType":"487","messageId":"488","endLine":50,"endColumn":48,"fix":"663"},{"ruleId":"485","severity":1,"message":"664","line":76,"column":67,"nodeType":"487","messageId":"488","endLine":76,"endColumn":88,"fix":"665"},{"ruleId":"529","severity":1,"message":"666","line":78,"column":5,"nodeType":"531","endLine":78,"endColumn":40,"suggestions":"667"},"react/jsx-max-props-per-line","Prop `lastName` must be placed on a new line","JSXAttribute","newLine",{"range":"668","text":"669"},{"range":"670","text":"671"},"Prop `totalCarbo` must be placed on a new line",{"range":"672","text":"673"},"Prop `macroSeries` must be placed on a new line",{"range":"674","text":"675"},"Prop `avgDinnerSeries` must be placed on a new line",{"range":"676","text":"677"},"Prop `carbSeries` must be placed on a new line",{"range":"678","text":"679"},"Prop `avgGrainSeries` must be placed on a new line",{"range":"680","text":"681"},"Prop `micronutrients` must be placed on a new line",{"range":"682","text":"683"},{"range":"684","text":"685"},"Prop `data` must be placed on a new line",{"range":"686","text":"687"},{"range":"688","text":"689"},"Prop `options` must be placed on a new line",{"range":"690","text":"691"},"Prop `type` must be placed on a new line",{"range":"692","text":"693"},{"range":"694","text":"695"},"Prop `filterCol` must be placed on a new line",{"range":"696","text":"697"},{"range":"698","text":"699"},{"range":"700","text":"701"},"Prop `goal` must be placed on a new line",{"range":"702","text":"703"},{"range":"704","text":"705"},{"range":"706","text":"707"},"Prop `color` must be placed on a new line",{"range":"708","text":"709"},"Prop `ref` must be placed on a new line",{"range":"710","text":"711"},"Prop `style` must be placed on a new line",{"range":"712","text":"713"},"Prop `onChange` must be placed on a new line",{"range":"714","text":"715"},{"range":"716","text":"717"},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'mock_data'. Either include it or remove the dependency array.","ArrayExpression",["718"],{"range":"719","text":"720"},"Prop `setFilter` must be placed on a new line",{"range":"721","text":"722"},"Prop `column.getToggleHiddenProps()` must be placed on a new line","JSXSpreadAttribute",{"range":"723","text":"724"},"Prop `id` must be placed on a new line",{"range":"725","text":"726"},"Prop `headerGroup.getHeaderGroupProps()` must be placed on a new line",{"range":"727","text":"728"},"Prop `column.getHeaderProps(column.getSortByToggleProps())` must be placed on a new line",{"range":"729","text":"730"},"Prop `row.getRowProps()` must be placed on a new line",{"range":"731","text":"732"},"Prop `cell.getCellProps()` must be placed on a new line",{"range":"733","text":"734"},"Prop `defaultValue` must be placed on a new line",{"range":"735","text":"736"},{"range":"737","text":"738"},"Prop `value` must be placed on a new line",{"range":"739","text":"740"},"Prop `disabled` must be placed on a new line",{"range":"741","text":"742"},{"range":"743","text":"744"},{"range":"745","text":"746"},{"range":"747","text":"748"},{"range":"749","text":"750"},"Prop `component` must be placed on a new line",{"range":"751","text":"752"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"753","text":"754"},"Prop `avgStepsCategory` must be placed on a new line",{"range":"755","text":"756"},"Prop `avgTimeCategory` must be placed on a new line",{"range":"757","text":"758"},"Prop `avgRestHR` must be placed on a new line",{"range":"759","text":"760"},"Prop `alignItems` must be placed on a new line",{"range":"761","text":"762"},"Prop `xs` must be placed on a new line",{"range":"763","text":"764"},"Prop `variant` must be placed on a new line",{"range":"765","text":"766"},{"range":"767","text":"768"},{"range":"769","text":"770"},{"range":"771","text":"770"},"Prop `date` must be placed on a new line",{"range":"772","text":"773"},"Prop `distance` must be placed on a new line",{"range":"774","text":"775"},{"range":"776","text":"762"},{"range":"777","text":"778"},{"range":"779","text":"764"},{"range":"780","text":"766"},{"range":"781","text":"768"},{"range":"782","text":"770"},{"range":"783","text":"770"},"Prop `rowSpacing` must be placed on a new line",{"range":"784","text":"785"},{"range":"786","text":"787"},{"range":"788","text":"787"},{"range":"789","text":"790"},"Prop `secondary` must be placed on a new line",{"range":"791","text":"792"},{"range":"793","text":"785"},{"range":"794","text":"787"},{"range":"795","text":"787"},{"range":"796","text":"790"},{"range":"797","text":"798"},"Prop `sx` must be placed on a new line",{"range":"799","text":"800"},"Prop `spacing` must be placed on a new line",{"range":"801","text":"802"},{"range":"803","text":"785"},"Prop `item` must be placed on a new line",{"range":"804","text":"805"},{"range":"806","text":"805"},{"range":"807","text":"805"},{"range":"808","text":"805"},{"range":"809","text":"785"},{"range":"810","text":"787"},{"range":"811","text":"787"},{"range":"812","text":"787"},{"range":"813","text":"787"},{"range":"814","text":"815"},"Prop `changeState` must be placed on a new line",{"range":"816","text":"817"},{"range":"818","text":"819"},{"range":"820","text":"821"},{"range":"822","text":"823"},{"range":"824","text":"825"},{"range":"826","text":"827"},{"range":"828","text":"829"},{"range":"830","text":"831"},{"range":"832","text":"833"},{"range":"834","text":"831"},"React Hook useEffect has missing dependencies: 'props.datePeriods' and 'sessionID'. Either include them or remove the dependency array.",["835"],"Prop `calories` must be placed on a new line",{"range":"836","text":"837"},"Prop `avgCalcium` must be placed on a new line",{"range":"838","text":"839"},"Prop `fatPct` must be placed on a new line",{"range":"840","text":"841"},{"range":"842","text":"843"},{"range":"844","text":"845"},"Prop `labels` must be placed on a new line",{"range":"846","text":"847"},"Prop `categories` must be placed on a new line",{"range":"848","text":"849"},{"range":"850","text":"851"},{"range":"852","text":"853"},{"range":"854","text":"855"},{"range":"856","text":"857"},{"range":"858","text":"859"},{"range":"860","text":"861"},{"range":"862","text":"863"},{"range":"864","text":"865"},{"range":"866","text":"867"},{"range":"868","text":"869"},{"range":"870","text":"871"},{"range":"872","text":"873"},{"range":"874","text":"875"},"Prop `datePeriods` must be placed on a new line",{"range":"876","text":"877"},{"range":"878","text":"879"},{"range":"880","text":"881"},"Prop `onClick` must be placed on a new line",{"range":"882","text":"883"},"Prop `onClear` must be placed on a new line",{"range":"884","text":"885"},"React Hook useMemo has a missing dependency: 'placeHolderText'. Either include it or remove the dependency array.",["886"],[2354,2417],"firstName={foodrxData.firstName}\nlastName={foodrxData.lastName}",[2438,2549],"firstName={foodrxData.firstName}\nlastName={foodrxData.lastName}\navgcal={avgCalorie}\ncalorieTotal={totalCalorie}",[2560,2667],"avgCarbo={avgCarbo}\ntotalCarbo={totalCarbo}\nproteinAvg={avgProtein}\nnDays={numDays}\nfatRatio={fatTargetPct}",[2678,2774],"fatSeries={fatSeries}\nmacroSeries={macroDistSeries}\navgBreakfastSeries={avgPlateBreakfastSeries}",[2786,2862],"avgLunchSeries={avgPlateLunchSeries}\navgDinnerSeries={avgPlateDinnerSeries}",[2873,2947],"calSeries={calorieSeries}\ncarbSeries={carboSeries}\nmealsCount={mealsCount}",[2958,3016],"proteinSeries={proteinSeries}\navgGrainSeries={grainSeries}",[3028,3111],"datePeriods={datePeriods}\nmicronutrients={micronutrients}\nitemCount={n_meals_items}",[2984,3047],"firstName={garminData.firstName}\nlastName={garminData.lastName}",[3068,3161],"overall_info={overall_info}\ndata={garminData}\nname={garminData.firstName+garminData.lastName}",[1050,1091],"firstName={firstName}\nlastName={lastName}",[1115,1172],"series={generalRadarSeries}\noptions={generalRadarOptions}",[2009,2056],"getPeriod={handlePeriodState}\ntype={'activity'}",[2157,2210],"cols={activity_cols}\ndata={subData}\npagination={true}",[2236,2305],"placeHolderText={'date'}\nfilterCol={'date'}\ntitle={'Activities List'}",[1318,1366],"getPeriod={handlePeriodState}\ntype={'heartrate'}",[1445,1493],"getPeriod={handlePeriodState}\ntype={'intensity'}",[1715,1759],"data={subData}\ngoal={80}\ncolor={props.color}",[1836,1860],"data={subData}\ngoal={80}",[1325,1369],"getPeriod={handlePeriodState}\ntype={'steps'}",[1557,1610],"data={subData}\ncolor={'#0FB4E4'}\ntext={'Steps Count'}",[352,395],"type='checkbox'\nref={resolvedRef}\n{...rest}",[283,368],"className=\"toggle\"\nstyle={{backgroundColor:color}}\nonClick={() => setIsOpen(!isOpen)}",[175,244],"value={filterValue || ''}\nonChange={(e) => setFilter(e.target.value)}",[154,218],"value={filter || ''}\nonChange={(e) => setFilter(e.target.value)}",{"desc":"887","fix":"888"},[1847,1909],"className='filter'\nstyle={{position:'relative', left:'800px'}}",[1941,1990],"filter={globalFilter}\nsetFilter={setGlobalFilter}",[2491,2541],"type='checkbox'\n{...column.getToggleHiddenProps()}",[2769,2800],"{...getTableProps()}\nid=\"table\"",[2923,2968],"key={1}\n{...headerGroup.getHeaderGroupProps()}",[3122,3195],"key={column.id}\n{...column.getHeaderProps(column.getSortByToggleProps())}",[3962,4071],"key={row.id}\n{...row.getRowProps()}\nonClick={() => getDetails(row.original.first_name,row.original.last_name)}",[4195,4236],"key={cell.value}\n{...cell.getCellProps()}",[5045,5087],"type='number'\ndefaultValue = {pageIndex+1}",[5406,5503],"value={pageSize}\nonChange={e => setPageSize(Number(e.target.value))}\nstyle={{marginRight:\"40px\"}}",[5628,5659],"key={pageSize}\nvalue={pageSize}",[5870,5925],"onClick={() => gotoPage(0)}\ndisabled={!canPreviousPage}",[5970,6028],"onClick={() => previousPage()}\ndisabled={!canPreviousPage}",[6075,6125],"onClick={() => nextPage()}\ndisabled={!canNextPage}",[6168,6229],"onClick={() => gotoPage(pageCount-1)}\ndisabled={!canNextPage}",[416,463],"variant=\"determinate\"\nvalue={value}\nsize='4rem'",[819,875],"variant=\"caption\"\ncomponent=\"div\"\ncolor=\"text.secondary\"",[867,894],"key={period}\nvalue={period}",[890,945],"avgSteps={avgSteps}\navgStepsCategory={avgStepsCategory}",[956,1051],"avgTime={avgIntenseMins}\navgTimeCategory={avgIntenseMinsCategory}\navgDuration={avgActivityTime}",[1062,1146],"avgEnergy={avgCalorie}\navgRestHR={avgRestHR}\navgHighHR={avgHighHR}\nname={props.name}",[1014,1056],"container\nalignItems=\"center\"\ngutterBottom",[1084,1091],"item\nxs",[1129,1170],"gutterBottom\nvariant=\"h3\"\ncomponent=\"div\"",[1476,1524],"color=\"text.secondary\"\nvariant=\"h6\"\ngutterBottom",[1629,1665],"color=\"text.primary\"\nvariant=\"body1\"",[1783,1819],[936,983],"type={data[i].activityType}\ndate={data[i].date}",[1001,1056],"duration={data[i].duration}\ndistance={data[i].distance}",[2636,2678],[2706,2739],"item\nstyle={{marginRight:\"2rem\"}}",[2826,2833],[2871,2912],[3229,3277],[3364,3400],[3492,3528],[1071,1135],"container\nrowSpacing={1}\ncolumnSpacing={{ xs: 1, sm: 2, md: 3 }}",[1163,1174],"item\nxs={6}",[1353,1364],[767,836],"key={row.date}\nstyle={{display:'flex',justifyContent:'space-around'}}",[1232,1300],"primary={row.date}\nsecondary={weekdays[new Date(row.date).getDay()]}",[1524,1588],[1616,1627],[1816,1827],[1334,1403],[1770,1826],"primary={row.date}\nsecondary={`${row.goalPct}% of Goal`}",[1091,1135],"position='static'\nsx={{bgcolor:curr_color }}",[1243,1270],"direction='row'\nspacing={5}",[1747,1811],[1839,1871],"className=\"category\"\nitem\nxs={6}",[2399,2431],[2982,3014],[3566,3598],[1616,1680],[1708,1719],[1900,1911],[2095,2106],[2336,2347],[1006,1043],"label=\"Steps Summary\"\ncolor=\"#0FB4E4\"",[1073,1120],"data={props.data}\nchangeState={changeStepState}",[1220,1261],"label=\"Intensity Summary\"\ncolor=\"#00A36C\"",[1296,1366],"data={props.data}\ncolor={'#00A36C'}\nchangeState={changeIntensityState}",[1466,1508],"label=\"Heart Rate Summary\"\ncolor=\"#D22B2B\"",[1542,1587],"data={props.data}\nchangeState={changehrState}",[1687,1729],"label=\"Activities Summary\"\ncolor=\"#E49B0F\"",[1764,1815],"data={props.data}\nchangeState={changeActivityState}",[197,296],"className=\"detail_row\"\nstyle={{display:'flex', justifyContent:'space-around', marginBottom:'40px'}}",[536,581],"series={props.series}\noptions={props.options}",[149,248],{"desc":"889","fix":"890"},[6733,6874],"name={name}\ncalories={avgcal}\navgCarbohydrates={avgCarbo}\navgProtein={avgProtein}\navgFat={avgFat}\nmealsCount={mealsCount}\nsession={sessionID}",[6887,7035],"avgSodium={sodium}\navgCalcium={calcium}\navgIron={iron}\navgPotassium={potassium}\navgFibre={fibre}\ncarboPct={macroSeries[1]}\nmacroMinMax={macroMinMax}",[7048,7202],"proteinPct={macroSeries[2]}\nfatPct={macroSeries[0]}\ndate={date}\nitemCount={itemCount}\nnumDays={numDays}\ngetDate={getDateHandler}\ndatePeriods={datePeriods}",[7222,7269],"className=\"calories\"\nstyle={{marginTop:'2rem'}}",[7300,7332],"label=\"Calories\"\ncolor=\"#0FB4E4\"",[7769,7810],"series={macroSeries}\nlabels={macroLabels}",[8032,8073],"series={calSeries}\ncategories={calLabels}",[8675,8724],"series={breakfastSeries}\nlabels={breakfastLabels}",[8927,8968],"series={lunchSeries}\nlabels={lunchLabels}",[9172,9215],"series={dinnerSeries}\nlabels={dinnerLabels}",[9400,9437],"label=\"Carbohydrates\"\ncolor=\"#00A36C\"",[10138,10185],"series={avgGrainSeries}\nlabels={avgGrainLabels}",[10399,10442],"series={carbSeries}\ncategories={carbLabels}",[10613,10644],"label=\"Protein\"\ncolor=\"#D22B2B\"",[11190,11235],"series={proteinSeries}\nlabels={proteinLabels}",[11410,11437],"label=\"Fat\"\ncolor=\"#E49B0F\"",[12018,12055],"series={fatSeries}\nlabels={fatLabels}",[12241,12279],"label=\"Micronutrients\"\ncolor=\"#36454F\"",[12377,12441],"cols={micro_data_cols}\ndata={micro_data_rows}\npagination={false}",[12467,12548],"placeHolderText={'nutrient'}\nfilterCol={'nutrient'}\ntitle={'Micronutrients List'}",[1078,1133],"getDate={props.getDate}\ndatePeriods={props.datePeriods}",[1292,1368],"className='nutrients'\nstyle={{display:'flex',justifyContent:'space-around'}}",[1395,1450],"className=\"macronutrients\"\nstyle={{marginRight:'4rem'}}",[1072,1103],"type=\"button\"\nonClick={onClear}",[1837,1962],"onFilter={e => setFilterText(e.target.value)}\nonClear={handleClear}\nfilterText={filterText}\nplaceHolderText={placeHolderText}",{"desc":"891","fix":"892"},"Update the dependencies array to be: [mock_data]",{"range":"893","text":"894"},"Update the dependencies array to be: [date, props.datePeriods, sessionID]",{"range":"895","text":"896"},"Update the dependencies array to be: [filterText, placeHolderText, resetPaginationToggle]",{"range":"897","text":"898"},[624,626],"[mock_data]",[1660,1666],"[date, props.datePeriods, sessionID]",[1974,2009],"[filterText, placeHolderText, resetPaginationToggle]"]